Script started on Mon 23 Jul 2018 04:22:19 PM PDT
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make ./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0018fed in intr_wait () at include/main/interrupt.h:89
89	        __asm__ volatile("sti\n\t"
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

---Type <return> to continue, or q <return> to quit---
Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) X
Argument required (starting display address).
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) Quit
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ grep 'ino #' typ escript[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C' types[1Pcript[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ [C[C[C[C[C[C[C[C[C[C3' typescript[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ [C[C[C[C[C[C[C[C[C[C[C0' typescript[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ [C[C[C[C[C[C[C[C[C[C[C[C

]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ grep 'ino 30' typpescript[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gdb -w 10
/usr/bin/qemu-system-i386
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0018fed in intr_wait () at include/main/interrupt.h:89
89	        __asm__ volatile("sti\n\t"
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

---Type <return> to continue, or q <return> to quit---
Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0018fed in intr_wait () at include/main/interrupt.h:89
89	        __asm__ volatile("sti\n\t"
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.
q
:q
^C
---Type <return> to continue, or q <return> to quit---
Program received signal SIGINT, Interrupt.
init.gdb:8: Error in sourced command file:
Remote connection closed
(gdb) q
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ grep 'ino 30' typescript[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gdb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C clean[K./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C cleanvi Config.mk./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ [4Pvi Config.mk
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;24r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[24;1HE325: ATTENTION
Found a swap file by the name ".Config.mk.swp"
[10Cowned by: wang631   dated: Wed Jul 11 23:48:18 2018
[9Cfile name: /mnt/shared-mac/weenix/Config.mk
[10Cmodified: YES
[9Cuser name: wang631   host name: wang631-VirtualBox
[8Cprocess ID: 11524
While opening file "Config.mk"
[13Cdated: Mon Jul 23 16:19:21 2018
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the
[23;67Hc[24;1Hase,
    be careful not to end up with two different instances of the s
[23;67Ha[24;1Hme
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Config.mk"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Config.mk.swp"
    to avoid this message.

Swap file ".Config.mk.swp" already exists!
-- More --[?12l[?25h[24;1H[K[24;1H[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (
[23;67HA[24;1H-- More -- SPACE/d/j: screen/page/line down, b/u/k: up, q: quit[24;1H[K[24;1H)bort:[24;1H[K[?25l[24;1H"Config.mk" 120L, 5494C[>c[1;1H[34m# This file iseant to change some aspect of how weenix is built or  [2;1Hrun.[m[2;11H[K[3;10H[K[4;1H[34m# Variables in this file should meet the following criteria:
# * They change some behavior in the building or running of weenix  [6;1Hthat someone[m[6;13H[K[7;1H[34m#   using weenix for educational purposes could reasonably want to  [8;1Hchange on a regular[m[8;21H[K[9;1H[34m#   basis. Note that variables like CFLAGS are not defined here becc[10;1Hause they should
#   generally not be changed.[m[11;30H[K[12;1H[K[13;1H[34m#[m[13;5H[K[14;1H[34m# Setting any of these variables will control which parts of the soo[15;1Hurce tree[m[15;10H[K[16;1H[34m# are built. To enable something set it to 1, otherwise set it to 00[17;1H.[m[17;5H[K[18;1H[34m#[m[18;5H[K[19;1H[36m     DRIVERS[m=1[19;16H[K[20;1H[36m         VFS[m=1[20;15H[K[21;1H[36m        S5FS[m=1
[36m          VM[m=1[22;15H[K[23;1H[36m     DYNAMIC[m=0[23;15H[K[24;50H1,1[11CTop[1;1H[?12l[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[24;50H2,0-1[3;1H[?12l[?25h[?25l[24;50H3,1  [4;1H[?12l[?25h[?25l[24;50H4[5;1H[?12l[?25h[?25l[24;50H5[7;1H[?12l[?25h[?25l[24;50H6[9;1H[?12l[?25h[?25l[24;50H7[11;1H[?12l[?25h[?25l[24;50H8,0-1[12;1H[?12l[?25h[?25l[24;50H9,1  [13;1H[?12l[?25h[?25l[24;50H10,1[14;1H[?12l[?25h[?25l[24;51H1[16;1H[?12l[?25h[?25l[24;51H2[18;1H[?12l[?25h[?25l[24;51H3[19;1H[?12l[?25h[?25l[24;51H4[20;1H[?12l[?25h[?25l[24;51H5[21;1H[?12l[?25h[?25l[24;51H6[22;1H[?12l[?25h[?25l[24;51H7[23;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# When you finish S5FS, first enable "VM"; once this is working, thh[23;1Hen enable[m[24;1H[K[24;50H18,1[11C0%[22;1H[?12l[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[34m# "DYNAMIC".[m[24;50H[K[24;50H19,1[11C1%[23;1H[?12l[?25h[?25l[1;23r[23;1H
[1;24r[24;50H[K[24;50H20,0-1[9C2%[23;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# Set whether or not to loop in kmain waiting for a gdb attach.  Thh[23;1His is a hack[m[24;50H[K[24;50H21,1[11C3%[22;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# to get around the qemu/gdb bug (https://bugs.launchpad.net/qemu/++[23;1Hbug/526653).[m[24;50H[K[24;50H22,1[11C4%[22;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m#
# By default, GDBWAIT=0.  But if you want to debug weenix with gdb [m[23;1H[1m[34m@                                                                  [m[24;50H[K[24;50H23,1[11C5%[22;1H[?12l[?25h[?25l[1;23r[23;1H
[1;24r[22;1H[34m# By default, GDBWAIT=0.  But if you want to debug weenix with gdb  [23;1Hand the[m[24;50H[K[24;50H24,1[11C6%[22;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# "./weenix -n -d gdb" command is not working right for you, see thh[23;1He instruction[m[24;50H[K[24;50H25,1[11C8%[22;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# about setting GDBWAIT=1 here.
#[m[24;50H[K[24;50H26,1[11C9%[22;1H[?12l[?25h[?25l[24;51H7[23;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# If GDBWAIT=1 is used, kmain in kernel/main/kmain.c loops.  The coo[23;1Hmmands in[m[24;50H[K[24;50H28,1[10C10%[22;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# init.gdb free qemu from that loop and the breakpoint at bootstrapp[23;1H is hit.[m[24;50H[K[24;50H29,1[10C12%[22;1H[?12l[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[34m#[m[24;50H[K[24;50H30,1[10C13%[23;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# Note that if GDBWAIT=1, weenix MUST BE invoked with the "./weenixx[23;1H -n -d gdb -w"[m[24;50H[K[24;50H31,1[10C15%[22;1H[?12l[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[34m# command!  If you invoke weenix with simply "./weenix -n", weenix  [22;1Hwill hang.
# Therefore, to run without gdb, you must have GDBWAIT=0.[m[24;50H[K[24;50H32,1[10C17%[21;1H[?12l[?25h[?25l[24;51H3[23;1H[?12l[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[34m#[m[24;50H[K[24;50H34,1[10C18%[23;1H[?12l[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[34m# If GDBWAIT=0 and you invoke weenix with gdb (i.e., with "./weenixx[22;1H -n -d gdb"),
# you should still be able to debug your kernel, but you will not b[m[23;1H[1m[34m@                                                                  [m[24;50H[K[24;50H35,1[10C19%[21;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[21;1H[34m# you should still be able to debug your kernel, but you will not bb[22;1He able to see
# all the printout from dbg() statements.[m[24;50H[K[24;50H36,1[10C20%[21;1H[?12l[?25h[?25l[24;51H7[23;1H[?12l[?25h[?25l[1;23r[23;1H
[1;24r[23;1H[34m#[m[24;50H[K[24;50H38,1[10C21%[23;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[22;1H[34m# If you change this value, you must do "make clean" and "make".[m
[36m        GDBWAIT[m=0[24;50H[K[24;50H39,1[10C23%[22;1H[?12l[?25h[?25l[24;50H40[23;1H[?12l[?25h[?25l[1;23r[1;1H[2M[1;24r[23;1H[34m# Set which CS402 tests are to run.  Valid from 0 (no tests except [m[23;1H[1m[34m@                                                                  [m[24;50H[K[24;50H41,0-1[8C24%[22;1H[?12l[?25h[?25l[24;51H0,1  [21;1H[?12l[?25h[?25l


[1m-- INSERT --[m[24;50H[K[24;50H40,1[10C24%[21;1H[?12l[?25h[?25l[24;53H2[21;2H[?12l[?25h[?25l[24;53H3[21;3H[?12l[?25h[?25l[24;53H4[21;4H[?12l[?25h[?25l[24;53H5[21;5H[?12l[?25h[?25l[24;53H6[21;6H[?12l[?25h[?25l[24;53H7[21;7H[?12l[?25h[?25l[24;53H8[21;8H[?12l[?25h[?25l[24;53H9[21;9H[?12l[?25h[?25l[24;53H10[21;10H[?12l[?25h[?25l[24;54H1[21;11H[?12l[?25h[?25l[24;54H2[21;12H[?12l[?25h[?25l[24;54H3[21;13H[?12l[?25h[?25l[24;54H4[21;14H[?12l[?25h[?25l[24;54H5[21;15H[?12l[?25h[?25l[24;54H6[21;16H[?12l[?25h[?25l[24;54H7[21;17H[?12l[?25h[?25l[24;54H8[21;18H[?12l[?25h[?25l[21;17H[K[24;54H7[21;17H[?12l[?25h[?25li[24;54H8[21;18H[?12l[?25h[?25l[21;17H[K[24;54H7[21;17H[?12l[?25h[?25l1[24;54H8[21;18H[?12l[?25h[24;1H[K[21;17H[?25l[24;50H40,17[9C24%[21;17H[?12l[?25h[?25l


"Config.mk"[24;50H[K[24;13H120L, 5494C written
[?1l>[?12l[?25h[?1049l]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ vi Config.mk./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ grep 'ino 30' typescript[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gdb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make [K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C clean
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
make[1]: Warning: File `../Config.mk' has modification time 42 s in the future
make[1]: warning:  Clock skew detected.  Your build may be incomplete.
make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Warning: File `../Config.mk' has modification time 42 s in the future
rm -f disk0.img lib/ld-weenix.so lib/libc.a lib/libc.so lib/libtest.a lib/libtest.so bin/ed.exec bin/ls.exec bin/sh.exec bin/uname.exec bin/hd.exec bin/stat.exec sbin/halt.exec sbin/init.exec usr/bin/args.exec usr/bin/hello.exec usr/bin/fork-and-wait.exec usr/bin/kshell.exec usr/bin/segfault.exec usr/bin/spin.exec usr/bin/eatmem.exec usr/bin/forkbomb.exec usr/bin/memtest.exec usr/bin/stress.exec usr/bin/vfstest.exec usr/bin/wc.exec usr/bin/forktest.exec usr/bin/eatinodes.exec usr/bin/pipetest.exec \
lib/libc/entry.o lib/libc/errno.o lib/libc/malloc.o lib/libc/printf.o lib/libc/quad.o lib/libc/rand.o lib/libc/scanf.o lib/libc/stream.o lib/libc/string.o lib/libc/strtol.o lib/libc/syscall.o lib/libc/vsnprintf.o lib/libc/vsscanf.o lib/libtest/test.o lib/ld-weenix/bs_i386.o lib/ld-weenix/ldalloc.o lib/ld-weenix/ldnames.o lib/ld-weenix/ldreloc_i386.o lib/ld-weenix/ldresolve.o lib/ld-weenix/ldstart.o lib/ld-weenix/ldutil.o
make[1]: warning:  Clock skew detected.  Your build may be incomplete.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
make[1]: Warning: File `../Config.mk' has modification time 41 s in the future
  Compiling "kernel/main/acpi.c"...
  Compiling "kernel/main/apic.c"...
  Compiling "kernel/main/gdt.c"...
  Compiling "kernel/main/interrupt.c"...
  Compiling "kernel/main/kmain.c"...
  Compiling "kernel/main/pit.c"...
  Compiling "kernel/boot/boot.S"...
  Compiling "kernel/util/debug.c"...
  Compiling "kernel/util/init.c"...
  Compiling "kernel/util/math.c"...
  Compiling "kernel/util/printf.c"...
  Compiling "kernel/util/string.c"...
  Compiling "kernel/util/time.c"...
  Compiling "kernel/mm/page.c"...
  Compiling "kernel/mm/pagetable.c"...
  Compiling "kernel/mm/pframe.c"...
  Compiling "kernel/mm/phys.c"...
  Compiling "kernel/mm/slab.c"...
  Compiling "kernel/proc/context.c"...
  Compiling "kernel/proc/faber_test.c"...
  Compiling "kernel/proc/fork.c"...
  Compiling "kernel/proc/kmutex.c"...
  Compiling "kernel/proc/kthread.c"...
  Compiling "kernel/proc/proc.c"...
  Compiling "kernel/proc/sched.c"...
  Compiling "kernel/proc/sched_helper.c"...
  Compiling "kernel/proc/sunghan_test.c"...
  Compiling "kernel/fs/ramfs/ramfs.c"...
  Compiling "kernel/fs/faber_fs_test.c"...
  Compiling "kernel/fs/file.c"...
  Compiling "kernel/fs/namev.c"...
  Compiling "kernel/fs/open.c"...
  Compiling "kernel/fs/pipe.c"...
  Compiling "kernel/fs/vfs.c"...
  Compiling "kernel/fs/vfs_syscall.c"...
  Compiling "kernel/fs/vn_mmobj_ops.c"...
  Compiling "kernel/fs/vnode.c"...
  Compiling "kernel/vm/anon.c"...
  Compiling "kernel/vm/brk.c"...
  Compiling "kernel/vm/mmap.c"...
vm/mmap.c: In function â€˜do_mmapâ€™:
vm/mmap.c:75:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
     if( (prot & PROT_EXEC != PROT_EXEC) && (prot & PROT_READ != PROT_READ) && (prot & PROT_WRITE != PROT_WRITE) && (prot & PROT_NONE != PROT_NONE) ) {
     ^
vm/mmap.c:75:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
vm/mmap.c:75:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
vm/mmap.c:75:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
vm/mmap.c:79:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
     if ( (prot & PROT_READ == PROT_READ) && ((curproc->p_files[fd]->f_mode&FMODE_READ)!= FMODE_READ) ){
     ^
vm/mmap.c:83:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
     if ( (flags & MAP_SHARED == MAP_SHARED) && (prot & PROT_WRITE == PROT_WRITE) && (curproc->p_files[fd]->f_mode != FMODE_WRITE) ){
     ^
vm/mmap.c:83:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
vm/mmap.c:87:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
     if ( (flags & MAP_SHARED != MAP_SHARED) && (flags & MAP_PRIVATE!= MAP_PRIVATE) && (flags & MAP_FIXED!= MAP_FIXED) && (flags & MAP_ANON != MAP_ANON) ){
     ^
vm/mmap.c:87:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
vm/mmap.c:87:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
vm/mmap.c:87:5: warning: suggest parentheses around comparison in operand of â€˜&â€™ [-Wparentheses]
  Compiling "kernel/vm/pagefault.c"...
  Compiling "kernel/vm/shadow.c"...
  Compiling "kernel/vm/shadowd.c"...
  Compiling "kernel/vm/vmmap.c"...
  Compiling "kernel/api/access.c"...
  Compiling "kernel/api/binfmt.c"...
  Compiling "kernel/api/elf32.c"...
  Compiling "kernel/api/exec.c"...
  Compiling "kernel/api/syscall.c"...
  Compiling "kernel/test/pipes.c"...
  Compiling "kernel/test/s5fs_test.c"...
  Compiling "kernel/test/usertest.c"...
  Compiling "kernel/test/kshell/command.c"...
  Compiling "kernel/test/kshell/commands.c"...
  Compiling "kernel/test/kshell/io.c"...
  Compiling "kernel/test/kshell/kshell.c"...
  Compiling "kernel/test/kshell/tokenizer.c"...
  Compiling "kernel/entry/entry.c"...
  Compiling "kernel/test/vfstest/vfstest.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 10.2g free
Added to ISO image: directory '/'='/tmp/grub.J9n2pd'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

  Creating gdb command list...
make[1]: warning:  Clock skew detected.  Your build may be incomplete.
make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Warning: File `../Config.mk' has modification time 35 s in the future
  Compiling "user/lib/ld-weenix/bs_i386.S"...
  Compiling "user/lib/ld-weenix/ldalloc.c"...
  Compiling "user/lib/ld-weenix/ldnames.c"...
  Compiling "user/lib/ld-weenix/ldreloc_i386.c"...
  Compiling "user/lib/ld-weenix/ldresolve.c"...
  Compiling "user/lib/ld-weenix/ldstart.c"...
  Compiling "user/lib/ld-weenix/ldutil.c"...
  Compiling "user/lib/libc/entry.S"...
  Compiling "user/lib/libc/errno.c"...
  Compiling "user/lib/libc/malloc.c"...
  Compiling "user/lib/libc/printf.c"...
  Compiling "user/lib/libc/quad.c"...
  Compiling "user/lib/libc/rand.c"...
  Compiling "user/lib/libc/scanf.c"...
  Compiling "user/lib/libc/stream.c"...
  Compiling "user/lib/libc/string.c"...
  Compiling "user/lib/libc/strtol.c"...
  Compiling "user/lib/libc/syscall.c"...
  Compiling "user/lib/libc/vsnprintf.c"...
  Compiling "user/lib/libc/vsscanf.c"...
  Creating "user/lib/libc.a"...
  Linking for "user/lib/ld-weenix.so"...
  Linking for "user/lib/libc.so"...
  Compiling "user/lib/libtest/test.c"...
  Creating "user/lib/libtest.a"...
  Linking for "user/lib/libtest.so"...
  Compiling "user/bin/ed.c"...
  Linking for "user/bin/ed.exec" (static)...
  Compiling "user/bin/ls.c"...
  Linking for "user/bin/ls.exec" (static)...
  Compiling "user/bin/sh.c"...
  Linking for "user/bin/sh.exec" (static)...
  Compiling "user/bin/uname.c"...
  Linking for "user/bin/uname.exec" (static)...
  Compiling "user/bin/hd.c"...
  Linking for "user/bin/hd.exec" (static)...
  Compiling "user/bin/stat.c"...
  Linking for "user/bin/stat.exec" (static)...
  Compiling "user/sbin/halt.c"...
  Linking for "user/sbin/halt.exec" (static)...
  Compiling "user/sbin/init.c"...
  Linking for "user/sbin/init.exec" (static)...
  Compiling "user/usr/bin/args.c"...
  Linking for "user/usr/bin/args.exec" (static)...
  Compiling "user/usr/bin/hello.c"...
  Linking for "user/usr/bin/hello.exec" (static)...
  Compiling "user/usr/bin/fork-and-wait.c"...
  Linking for "user/usr/bin/fork-and-wait.exec" (static)...
  Compiling "user/usr/bin/kshell.c"...
  Linking for "user/usr/bin/kshell.exec" (static)...
  Compiling "user/usr/bin/segfault.S"...
  Linking for "user/usr/bin/segfault.exec" (static)...
  Compiling "user/usr/bin/spin.c"...
  Linking for "user/usr/bin/spin.exec" (static)...
  Compiling "user/usr/bin/tests/eatmem.c"...
  Linking for "user/usr/bin/eatmem.exec" (static)...
  Compiling "user/usr/bin/tests/forkbomb.c"...
  Linking for "user/usr/bin/forkbomb.exec" (static)...
  Compiling "user/usr/bin/tests/memtest.c"...
  Linking for "user/usr/bin/memtest.exec" (static)...
  Compiling "user/usr/bin/tests/stress.c"...
  Linking for "user/usr/bin/stress.exec" (static)...
  Compiling "user/usr/bin/tests/vfstest.c"...
  Linking for "user/usr/bin/vfstest.exec" (static)...
  Compiling "user/usr/bin/wc.c"...
  Linking for "user/usr/bin/wc.exec" (static)...
  Compiling "user/usr/bin/tests/forktest.c"...
  Linking for "user/usr/bin/forktest.exec" (static)...
  Compiling "user/usr/bin/tests/eatinodes.c"...
  Linking for "user/usr/bin/eatinodes.exec" (static)...
  Compiling "user/usr/bin/tests/pipetest.c"...
  Linking for "user/usr/bin/pipetest.exec" (static)...
  Creating directory "tmp"...
  Staging initial disk contents...
  Running fsmaker to create "user/disk0.img"...
  Disk Blocks: 2048 
  Disk Inodes: 240  
  Removing obsolete disk0.img
make[1]: warning:  Clock skew detected.  Your build may be incomplete.
rm bin/stat.o usr/bin/tests/eatmem.o usr/bin/spin.o bin/ed.o usr/bin/args.o bin/uname.o bin/sh.o sbin/halt.o usr/bin/fork-and-wait.o usr/bin/tests/eatinodes.o usr/bin/tests/stress.o usr/bin/wc.o bin/hd.o usr/bin/kshell.o usr/bin/tests/vfstest.o usr/bin/hello.o usr/bin/tests/forkbomb.o usr/bin/tests/forktest.o usr/bin/segfault.o usr/bin/tests/pipetest.o usr/bin/tests/memtest.o sbin/init.o bin/ls.o
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make cleanvi Config.mk./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

---Type <return> to continue, or q <return> to quit---
Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) b [K[Kwatch *0xcfe840fc
Hardware watchpoint 4: *0xcfe840fc
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = 2
New value = 187
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) cwatch *0xcfe840fc/ *0xcfe840fcx *0xcfe840fc
A syntax error in expression, near `/x *0xcfe840fc'.
(gdb) watch/x *0xcfe840fc[1P *0xcfe840fc[1P *0xcfe840fcc *0xcfe840fc[1P *0xcfe840fc
Hardware watchpoint 5: *0xcfe840fc
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = 187
New value = 48059
Hardware watchpoint 5: *0xcfe840fc

Old value = 187
New value = 48059
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = 48059
New value = 12303291
Hardware watchpoint 5: *0xcfe840fc

Old value = 48059
New value = 12303291
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = 12303291
New value = -1145324613
Hardware watchpoint 5: *0xcfe840fc

Old value = 12303291
New value = -1145324613
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
c
Hardware watchpoint 4: *0xcfe840fc

Old value = -1145324613
New value = -1145324800
Hardware watchpoint 5: *0xcfe840fc

Old value = -1145324613
New value = -1145324800
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1145324800
New value = -1145372672
Hardware watchpoint 5: *0xcfe840fc

Old value = -1145324800
New value = -1145372672
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1145372672
New value = -1157627904
Hardware watchpoint 5: *0xcfe840fc

Old value = -1145372672
New value = -1157627904
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1157627904
New value = 0
Hardware watchpoint 5: *0xcfe840fc

Old value = -1157627904
New value = 0
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = 0
New value = -1073404224
Hardware watchpoint 5: *0xcfe840fc

Old value = 0
New value = -1073404224
init_special_vnode (vn=0xcfe840fc) at fs/vnode.c:428
428	                vn->vn_cdev = bytedev_lookup(vn->vn_devid);
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073404224
New value = -1073404416
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073404224
New value = -1073404416
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073404416
New value = -1073414144
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073404416
New value = -1073414144
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073414144
New value = -1073741824
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073414144
New value = -1073741824
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073741824
New value = 0
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073741824
New value = 0
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = 0
New value = -1073404224
Hardware watchpoint 5: *0xcfe840fc

Old value = 0
New value = -1073404224
init_special_vnode (vn=0xcfe840fc) at fs/vnode.c:428
428	                vn->vn_cdev = bytedev_lookup(vn->vn_devid);
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073404224
New value = -1073404416
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073404224
New value = -1073404416
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073404416
New value = -1073414144
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073404416
New value = -1073414144
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073414144
New value = -1073741824
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073414144
New value = -1073741824
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073741824
New value = 0
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073741824
New value = 0
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = 0
New value = -1073404224
Hardware watchpoint 5: *0xcfe840fc

Old value = 0
New value = -1073404224
init_special_vnode (vn=0xcfe840fc) at fs/vnode.c:428
428	                vn->vn_cdev = bytedev_lookup(vn->vn_devid);
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073404224
New value = -1073404416
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073404224
New value = -1073404416
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073404416
New value = -1073414144
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073404416
New value = -1073414144
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073414144
New value = -1073741824
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073414144
New value = -1073741824
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = -1073741824
New value = 0
Hardware watchpoint 5: *0xcfe840fc

Old value = -1073741824
New value = 0
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe840fc

Old value = 0
New value = -1073404224
Hardware watchpoint 5: *0xcfe840fc

Old value = 0
New value = -1073404224
init_special_vnode (vn=0xcfe840fc) at fs/vnode.c:428
428	                vn->vn_cdev = bytedev_lookup(vn->vn_devid);
(gdb) c
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) c[Kq
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

---Type <return> to continue, or q <return> to quit---
Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) b vref
Breakpoint 4 at 0xc0024a8c: file fs/vnode.c, line 117.
(gdb) b vput
Breakpoint 5 at 0xc0024fd0: file fs/vnode.c, line 241.
(gdb) c
Continuing.

Breakpoint 4, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84080) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 5, vput (vn=0xcfe84080) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 5, vput (vn=0xcfe84004) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84080) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 5, vput (vn=0xcfe84004) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 5, vput (vn=0xcfe840fc) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) where
#0  vput (vn=0xcfe840fc) at fs/vnode.c:241
#1  0xc004dd12 in s5fs_mknod ()
#2  0xc0021693 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:309
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) p vn_[K->vn_ref
There is no member named vn_ref.
(gdb) p vn->vn_refcount
$1 = 1
(gdb) c[Kn
243	        KASSERT(0 <= vn->vn_nrespages);
(gdb) n
244	        KASSERT(vn->vn_nrespages < vn->vn_refcount);
(gdb) n
246	        KASSERT(!(VN_BUSY & vn->vn_flags));
(gdb) n
249	        dbg(DBG_VNREF, "vput: 0x%p, 0x%p ino %ld, down to %d, nrespages = %d\n",
(gdb) n
252	        if ((vn->vn_nrespages == (vn->vn_refcount - 1))
(gdb) n
253	            && !vn->vn_fs->fs_op->query_vnode(vn)) {
(gdb) n
282	        if (0 < --vn->vn_refcount)
(gdb) n
290	        KASSERT(0 == vn->vn_refcount);
(gdb) n
291	        KASSERT(0 == vn->vn_nrespages);
(gdb) np vn->vn_refcount[Kcount
$2 = 0
(gdb) p vn->vn_refcount)(vn->vn_refcount)[C[C[C[C[C[C[C[C[C&(vn->vn_refcount)[C[C[C[C[C[C[C[C[C
$3 = (int *) 0xcfe84108
(gdb) p &(vn->vn_refcount)[K[C[K[K[K[K[K[K[K[K[K[K[K[K[K[1P(vn[C[1Pvn
$4 = (struct vnode *) 0xcfe840fc
(gdb) where
#0  vput (vn=0xcfe840fc) at fs/vnode.c:291
#1  0xc004dd12 in s5fs_mknod ()
#2  0xc0021693 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:309
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.

Breakpoint 5, vput (vn=0xcfe84080) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84080) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 5, vput (vn=0xcfe84004) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 5, vput (vn=0xcfe840fc) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 5, vput (vn=0xcfe84080) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) 
Continuing.

Breakpoint 4, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

---Type <return> to continue, or q <return> to quit---
Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) watch ([K*0xcfe84108
Hardware watchpoint 4: *0xcfe84108
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 8168
New value = 8123
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 8123
New value = 48059
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 48059
New value = 12303291
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 12303291
New value = -1145324613
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
c
c
Hardware watchpoint 4: *0xcfe84108

Old value = -1145324613
New value = -1145324800
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = -1145324800
New value = -1145372672
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = -1145372672
New value = -1157627904
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = -1157627904
New value = 0
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=40) at fs/vnode.c:212
212	        return vn;
(gdb) where
#0  vget (fs=0xcfea0518, vno=40) at fs/vnode.c:212
#1  0xc004dbd7 in s5fs_mknod ()
#2  0xc0021693 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:309
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 1
New value = 0
0xc0025281 in vput (vn=0xcfe840fc) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) where
#0  0xc0025281 in vput (vn=0xcfe840fc) at fs/vnode.c:282
#1  0xc004dd12 in s5fs_mknod ()
#2  0xc0021693 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:309
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=41) at fs/vnode.c:212
212	        return vn;
(gdb) where
#0  vget (fs=0xcfea0518, vno=41) at fs/vnode.c:212
#1  0xc004dbd7 in s5fs_mknod ()
#2  0xc0021693 in do_mknod (path=0xc0053b0d "/dev/zero", 
    mode=256, devid=257) at fs/vfs_syscall.c:309
#3  0xc0007293 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:236
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 1
New value = 0
0xc0025281 in vput (vn=0xcfe840fc) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=42) at fs/vnode.c:212
212	        return vn;
(gdb) c[Kwhere
#0  vget (fs=0xcfea0518, vno=42) at fs/vnode.c:212
#1  0xc004dbd7 in s5fs_mknod ()
#2  0xc0021693 in do_mknod (path=0xc0053b17 "/dev/tty0", 
    mode=256, devid=512) at fs/vfs_syscall.c:309
#3  0xc00072af in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:237
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 1
New value = 0
0xc0025281 in vput (vn=0xcfe840fc) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=42) at fs/vnode.c:212
212	        return vn;
(gdb) where
#0  vget (fs=0xcfea0518, vno=42) at fs/vnode.c:212
#1  0xc004deea in s5fs_lookup ()
#2  0xc001d6a5 in lookup (dir=0xcfe84080, name=0xcfe5db61 "tty0", 
    len=4, result=0xcfe5da34) at fs/namev.c:52
#3  0xc001ee42 in open_namev (pathname=0xcfe5db5c "/dev/tty0", 
    flag=2, res_vnode=0xcfe5daf0, base=0x0) at fs/namev.c:267
#4  0xc001fae0 in do_open (filename=0xcfe5db5c "/dev/tty0", 
    oflags=2) at fs/open.c:149
#5  0xc0035687 in kshell_create (ttyid=0 '\000')
    at test/kshell/kshell.c:116
#6  0xc0007cf4 in initproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:468
#7  0xc00119a6 in __context_initial_func (
    func=0xc0007c10 <initproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#8  0xbbbbbbbb in ?? ()
#9  0xc0007c10 in vm_test (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:431
#10 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 1
New value = 2
vref (vn=0xcfe840fc) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe840fc) at fs/vnode.c:120
#1  0xc0024d30 in vget (fs=0xcfea0518, vno=42) at fs/vnode.c:154
#2  0xc004deea in s5fs_lookup ()
#3  0xc001d6a5 in lookup (dir=0xcfe84080, name=0xcfeb769d "tty0", 
    len=4, result=0xcfe1ddbc) at fs/namev.c:52
#4  0xc001ee42 in open_namev (pathname=0xcfeb7698 "/dev/tty0", 
    flag=0, res_vnode=0xcfe1de78, base=0x0) at fs/namev.c:267
#5  0xc001fae0 in do_open (filename=0xcfeb7698 "/dev/tty0", 
    oflags=0) at fs/open.c:149
#6  0xc00312d6 in sys_open (arg=0x8047f94) at api/syscall.c:600
#7  0xc003208b in syscall_dispatch (sysnum=5, args=134512532, 
    regs=0xcfe1dfbc) at api/syscall.c:964
#8  0xc0031c5c in syscall_handler (regs=0xcfe1dfbc)
    at api/syscall.c:904
#9  0xc0004235 in __intr_handler (regs=...)
    at main/interrupt.c:395
#10 0xc0002b71 in __intr_handler46 ()
    at include/main/interrupt.h:106
#11 0x00000023 in ?? ()
#12 0x00000023 in ?? ()
#13 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 2
New value = 3
vref (vn=0xcfe840fc) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe840fc) at fs/vnode.c:120
#1  0xc0024d30 in vget (fs=0xcfea0518, vno=42) at fs/vnode.c:154
#2  0xc004deea in s5fs_lookup ()
#3  0xc001d6a5 in lookup (dir=0xcfe84080, name=0xcfeb769d "tty0", 
    len=4, result=0xcfe1ddbc) at fs/namev.c:52
#4  0xc001ee42 in open_namev (pathname=0xcfeb7698 "/dev/tty0", 
    flag=1, res_vnode=0xcfe1de78, base=0x0) at fs/namev.c:267
#5  0xc001fae0 in do_open (filename=0xcfeb7698 "/dev/tty0", 
    oflags=1) at fs/open.c:149
#6  0xc00312d6 in sys_open (arg=0x8047f94) at api/syscall.c:600
#7  0xc003208b in syscall_dispatch (sysnum=5, args=134512532, 
    regs=0xcfe1dfbc) at api/syscall.c:964
#8  0xc0031c5c in syscall_handler (regs=0xcfe1dfbc)
    at api/syscall.c:904
#9  0xc0004235 in __intr_handler (regs=...)
    at main/interrupt.c:395
#10 0xc0002b71 in __intr_handler46 ()
    at include/main/interrupt.h:106
#11 0x00000023 in ?? ()
#12 0x00000023 in ?? ()
#13 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 3
New value = 2
0xc0025281 in vput (vn=0xcfe840fc) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) where
#0  0xc0025281 in vput (vn=0xcfe840fc) at fs/vnode.c:282
#1  0xc001d461 in fput (f=0xcfe2f004) at fs/file.c:128
#2  0xc0020ced in do_close (fd=0) at fs/vfs_syscall.c:161
#3  0xc0035871 in kshell_destroy (ksh=0xcfeb7788)
    at test/kshell/kshell.c:142
#4  0xc0007d3e in initproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:471
#5  0xc00119a6 in __context_initial_func (
    func=0xc0007c10 <initproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#6  0xbbbbbbbb in ?? ()
#7  0xc0007c10 in vm_test (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:431
#8  0x00000000 in ?? ()
(gdb) Quit
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) c
Continuing.

Breakpoint 2, hard_shutdown () at main/kmain.c:158
158	        vt_print_shutdown();
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C clean[K
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
  Compiling "kernel/fs/namev.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 10.0g free
Added to ISO image: directory '/'='/tmp/grub.BCLc77'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
xorriso : UPDATE : Thank you for being patient. Working since 0 seconds.
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) c
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
  Compiling "kernel/fs/namev.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 10.0g free
Added to ISO image: directory '/'='/tmp/grub.c6G1MQ'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
xorriso : UPDATE : Thank you for being patient. Working since 0 seconds.
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) c
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) c
Continuing.
^C
Program received signal SIGINT, Interrupt.
Remote communication error.  Target disconnected.: Connection reset by peer.
(gdb) q
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) watch *0xcfe840[K108
Hardware watchpoint 4: *0xcfe84108
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 8168
New value = 8123
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 8123
New value = 48059
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 48059
New value = 12303291
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 12303291
New value = -1145324613
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = -1145324613
New value = -1145324800
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = -1145324800
New value = -1145372672
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = -1145372672
New value = -1157627904
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = -1157627904
New value = 0
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=40) at fs/vnode.c:212
212	        return vn;
(gdb) where
#0  vget (fs=0xcfea0518, vno=40) at fs/vnode.c:212
#1  0xc004dbe7 in s5fs_mknod ()
#2  0xc00216a5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:309
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84108

Old value = 1
New value = 0
0xc0025293 in vput (vn=0xcfe840fc) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) c
Continuing.
c
c
^C
Program received signal SIGINT, Interrupt.
dbg_panic_halt () at util/debug.c:191
191	}
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) b kmain.c:234
Breakpoint 4 at 0xc000724f: file main/kmain.c, line 234.
(gdb) c
Continuing.

Breakpoint 4, idleproc_run (arg1=0, arg2=0x0) at main/kmain.c:234
234	        do_mkdir("/dev");
(gdb) b *0xcfe84108
Breakpoint 5 at 0xcfe84108
(gdb) step[K[K[K[Kstep
do_mkdir (path=0xc0053afe "/dev") at fs/vfs_syscall.c:353
warning: Source file is more recent than executable.
353	    	if (strlen(path) > NAME_LEN){
(gdb) n
357	    	vnode_t *parent_vnode = NULL, *res_vnode = NULL;
(gdb) n
358	    	const char *name = NULL;
(gdb) n
359	    	size_t namelen = 0;
(gdb) nstepb *0xcfe84108\ *0xcfe84108[C[C[C[C[C[C[C[C[1P *0xcfe84108[C[C[C[C[C[C[C[1P *0xcfe84108[C[C[C[C[C[Cw *0xcfe84108[C[C[C[C[C[C[Ca *0xcfe84108[C[C[C[C[C[C[C[Ct *0xcfe84108[C[C[C[C[C[C[C[C[Cc *0xcfe84108[C[C[C[C[C[C[C[C[C[Ch *0xcfe84108
Hardware watchpoint 6: *0xcfe84108
(gdb) n
360	    	int temp=0,temp_lookup=0,temp_mkdir=0;
(gdb) n
361	    	if(strlen(path) <= MAXPATHLEN){
(gdb) n
363	        	if((temp=dir_namev(path, &namelen, &name, NULL, &parent_vnode)) >= 0){
(gdb) n
365	        			if (name == NULL) {
(gdb) p parent)[K_vnode
$1 = (vnode_t *) 0xcfe84004
(gdb) p parent_vnode-<[K>vn_refcount
$2 = 4
(gdb) p parent_vnode->vn_refcount)(parent_vnode->vn_refcount)[C[C[C[C[C[C[C[C[C[C&(parent_vnode->vn_refcount)[C[C[C[C[C[C[C[C[C
$3 = (int *) 0xcfe84010
(gdb) p &(parent_vnode->vn_refcount)[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kwatch *0xcfe84010
Hardware watchpoint 7: *0xcfe84010
(gdb) c
Continuing.
Hardware watchpoint 7: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc00246d4 in vo_vref (o=0xcfe8400c) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe8400c, pagenum=0)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe8400c, pagenum=0, 
    result=0xcfe6dda0) at mm/pframe.c:368
#4  0xc00502d8 in s5_read_file ()
#5  0xc00511a8 in s5_find_dirent ()
#6  0xc004de33 in s5fs_lookup ()
#7  0xc001d6a5 in lookup (dir=0xcfe84004, name=0xc0053aff "dev", 
    len=3, result=0xcfe6df50) at fs/namev.c:52
#8  0xc0021c7a in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:371
#9  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#10 0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#11 0xbbbbbbbb in ?? ()
#12 0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#13 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 7: *0xcfe84010

Old value = 5
New value = 4
0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) cwhere
#0  0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
#1  0xc0021e3d in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:386
#2  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#3  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#4  0xbbbbbbbb in ?? ()
#5  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#6  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 7: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwherec[Kwhere
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001e3b2 in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:160
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) watch *0xcfe84010
Hardware watchpoint 4: *0xcfe84010
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 3
New value = 187
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 187
New value = 48059
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 48059
New value = 12303291
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 12303291
New value = -1145324613
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = -1145324613
New value = -1145324800
0xc000af25 in memset (s=0xcfe84004, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = -1145324800
New value = -1145372672
0xc000af25 in memset (s=0xcfe84004, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = -1145372672
New value = -1157627904
0xc000af25 in memset (s=0xcfe84004, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = -1157627904
New value = 0
0xc000af25 in memset (s=0xcfe84004, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=0) at fs/vnode.c:212
212	        return vn;
(gdb) wht[Kere
#0  vget (fs=0xcfea0518, vno=0) at fs/vnode.c:212
#1  0xc004d022 in s5fs_mount ()
#2  0xc00203ab in mountfunc (fs=0xcfea0518) at fs/vfs.c:224
#3  0xc0020208 in vfs_init () at fs/vfs.c:137
#4  0xc0008a31 in _init_call (funcs=0xcfe6df08, func=0xcfeb7508)
    at util/init.c:82
#5  0xc00088d4 in _init_call (funcs=0xcfe6df08, func=0xcfeb7468)
    at util/init.c:73
#6  0xc0008f1a in init_call_all () at util/init.c:137
#7  0xc000720d in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:217
#8  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#9  0xbbbbbbbb in ?? ()
#10 0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#11 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 1
New value = 2
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) s[Kget[K[K[Kwhere
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc0007230 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:226
#2  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#3  0xbbbbbbbb in ?? ()
#4  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#5  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 2
New value = 3
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) whter[K[K[Kere
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc000724f in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:228
#2  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#3  0xbbbbbbbb in ?? ()
#4  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#5  0x00000000 in ?? ()
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc000724f in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:228
#2  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#3  0xbbbbbbbb in ?? ()
#4  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#5  0x00000000 in ?? ()
(gdb) where[K[K[K[K[Kc
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 3
New value = 4
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001e3b2 in dir_namev (pathname=0xc0053afe "/dev", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:160
#2  0xc0021b99 in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:363
#3  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 4
New value = 3
0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) where
#0  0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
#1  0xc001ebe4 in dir_namev (pathname=0xc0053afe "/dev", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:232
#2  0xc0021b99 in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:363
#3  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 3
New value = 4
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001ebef in dir_namev (pathname=0xc0053afe "/dev", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:233
#2  0xc0021b99 in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:363
#3  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) w[Kwatch *o[K0xcfe84108
Hardware watchpoint 5: *0xcfe84108
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc00246d4 in vo_vref (o=0xcfe8400c) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe8400c, pagenum=0)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe8400c, pagenum=0, 
    result=0xcfe6dda0) at mm/pframe.c:368
#4  0xc00502d8 in s5_read_file ()
#5  0xc00511a8 in s5_find_dirent ()
#6  0xc004de33 in s5fs_lookup ()
#7  0xc001d6a5 in lookup (dir=0xcfe84004, name=0xc0053aff "dev", 
    len=3, result=0xcfe6df50) at fs/namev.c:52
#8  0xc0021c7a in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:371
#9  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#10 0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#11 0xbbbbbbbb in ?? ()
#12 0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#13 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 5
New value = 4
0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) where
#0  0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
#1  0xc0021e3d in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:386
#2  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#3  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#4  0xbbbbbbbb in ?? ()
#5  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#6  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwhere
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001e3b2 in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:160
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) wherec[K
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 5
New value = 4
0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) cwherec[Kwherec[Kwhere
#0  0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
#1  0xc001e807 in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:209
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) wherec[K
Continuing.
Hardware watchpoint 4: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwhere
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001ebef in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:233
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) wherec[Kwherec[K
Continuing.
Hardware watchpoint 5: *0xcfe84108

Old value = -1145324613
New value = -1145324800
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) cwhere[K[K[K[K[Kc
Continuing.
Hardware watchpoint 5: *0xcfe84108

Old value = -1145324800
New value = -1145372672
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84108

Old value = -1145372672
New value = -1157627904
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84108

Old value = -1157627904
New value = 0
0xc000af25 in memset (s=0xcfe840fc, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84108

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=40) at fs/vnode.c:212
212	        return vn;
(gdb) where
#0  vget (fs=0xcfea0518, vno=40) at fs/vnode.c:212
#1  0xc004dbe7 in s5fs_mknod ()
#2  0xc00216a5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:309
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) 
#0  vget (fs=0xcfea0518, vno=40) at fs/vnode.c:212
#1  0xc004dbe7 in s5fs_mknod ()
#2  0xc00216a5 in do_mknod (
    path=0xc0053b03 <error reading variable>, 
    mode=<error reading variable: Cannot access memory at address 0xcfe6df88>, 
    devid=<error reading variable: Cannot access memory at address 0xcfe6df8c>) at fs/vfs_syscall.c:309
#3  0xc0007277 in idleproc_run (
    arg1=<error reading variable: Cannot access memory at address 0xcfe6dfc4>, 
    arg2=<error reading variable: Cannot access memory at address 0xcfe6dfc8>) at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=<error reading variable: Cannot access memory at address 0xcfe6dff4>, 
    arg1=<error reading variable: Cannot access memory at address 0xcfe6dff8>, 
    arg2=<error reading variable: Cannot access memory at address 0xcfe6dffc>) at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (
    arg1=<error reading variable: Cannot access memory at address 0xcfe6dffc>, 
    arg2=<error reading variable: Cannot access memory at address 0xcfe6e000>) at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) q
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) b 234
Breakpoint 4 at 0xc000724f: file main/kmain.c, line 234.
(gdb) c
Continuing.

Breakpoint 4, idleproc_run (arg1=0, arg2=0x0) at main/kmain.c:234
234	        do_mkdir("/dev");
(gdb) step
do_mkdir (path=0xc0053afe "/dev") at fs/vfs_syscall.c:353
warning: Source file is more recent than executable.
353	    	if (strlen(path) > NAME_LEN){
(gdb) n
357	    	vnode_t *parent_vnode = NULL, *res_vnode = NULL;
(gdb) n
358	    	const char *name = NULL;
(gdb) n
359	    	size_t namelen = 0;
(gdb) n
360	    	int temp=0,temp_lookup=0,temp_mkdir=0;
(gdb) n
361	    	if(strlen(path) <= MAXPATHLEN){
(gdb) b vref [K
Breakpoint 5 at 0xc0024a9e: file fs/vnode.c, line 117.
(gdb) v[Kb vput
Breakpoint 6 at 0xc0024fe2: file fs/vnode.c, line 241.
(gdb) n
363	        	if((temp=dir_namev(path, &namelen, &name, NULL, &parent_vnode)) >= 0){
(gdb) n

Breakpoint 5, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) wath[Kch *0xcfe84010
Hardware watchpoint 7: *0xcfe84010
(gdb) n
118	        KASSERT(0 < vn->vn_refcount);
(gdb) n
119	        vn->vn_refcount++;
(gdb) n
Hardware watchpoint 7: *0xcfe84010

Old value = 3
New value = 4
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) n
122	}
(gdb) n
dir_namev (pathname=0xc0053afe "/dev", namelen=0xcfe6df48, 
    name=0xcfe6df4c, base=0x0, res_vnode=0xcfe6df54)
    at fs/namev.c:161
161	        if(pathname[end_pos]=='/'){          
(gdb) n
162	          end_pos++;
(gdb) n
163	          start_pos= end_pos; 
(gdb) n
166	        while(retval >= 0 && pathname[end_pos] != '\0')
(gdb) n
168	        	while (pathname[end_pos]!='/' && pathname[end_pos]!='\0')
(gdb) n
170	        		end_pos++;
(gdb) n
171	               	dbg(DBG_PRINT, "(GRADING2B)\n");
(gdb) n
168	        	while (pathname[end_pos]!='/' && pathname[end_pos]!='\0')
(gdb) n
170	        		end_pos++;
(gdb) n
171	               	dbg(DBG_PRINT, "(GRADING2B)\n");
(gdb) n
168	        	while (pathname[end_pos]!='/' && pathname[end_pos]!='\0')
(gdb) n
170	        		end_pos++;
(gdb) n
171	               	dbg(DBG_PRINT, "(GRADING2B)\n");
(gdb) c
Continuing.

Breakpoint 6, vput (vn=0xcfe84004) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) where
#0  vput (vn=0xcfe84004) at fs/vnode.c:241
#1  0xc001ebe4 in dir_namev (pathname=0xc0053afe "/dev", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:232
#2  0xc0021b99 in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:363
#3  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c[Kn
243	        KASSERT(0 <= vn->vn_nrespages);
(gdb) n
244	        KASSERT(vn->vn_nrespages < vn->vn_refcount);
(gdb) n
246	        KASSERT(!(VN_BUSY & vn->vn_flags));
(gdb) n
249	        dbg(DBG_VNREF, "vput: 0x%p, 0x%p ino %ld, down to %d, nrespages = %d\n",
(gdb) n
252	        if ((vn->vn_nrespages == (vn->vn_refcount - 1))
(gdb) n
282	        if (0 < --vn->vn_refcount)
(gdb) n
Hardware watchpoint 7: *0xcfe84010

Old value = 4
New value = 3
0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) n
283	                return;
(gdb) n
313	}
(gdb) n
dir_namev (pathname=0xc0053afe "/dev", namelen=0xcfe6df48, 
    name=0xcfe6df4c, base=0x0, res_vnode=0xcfe6df54)
    at fs/namev.c:233
233			vref(cur_parent);
(gdb) n

Breakpoint 5, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) n
118	        KASSERT(0 < vn->vn_refcount);
(gdb) n
119	        vn->vn_refcount++;
(gdb) n
Hardware watchpoint 7: *0xcfe84010

Old value = 3
New value = 4
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) n
122	}
(gdb) n
dir_namev (pathname=0xc0053afe "/dev", namelen=0xcfe6df48, 
    name=0xcfe6df4c, base=0x0, res_vnode=0xcfe6df54)
    at fs/namev.c:234
234	        dbg(DBG_PRINT, "(GRADING2B)\n");
(gdb) n
235	        return retval;
(gdb) n
236	}
(gdb) n
do_mkdir (path=0xc0053afe "/dev") at fs/vfs_syscall.c:365
365	        			if (name == NULL) {
(gdb) n
371	            		temp_lookup = lookup(parent_vnode, name, namelen, &res_vnode);
(gdb) n

Breakpoint 5, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:117
#1  0xc00246d4 in vo_vref (o=0xcfe8400c) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe8400c, pagenum=0)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe8400c, pagenum=0, 
    result=0xcfe6dda0) at mm/pframe.c:368
#4  0xc00502d8 in s5_read_file ()
#5  0xc00511a8 in s5_find_dirent ()
#6  0xc004de33 in s5fs_lookup ()
#7  0xc001d6a5 in lookup (dir=0xcfe84004, name=0xc0053aff "dev", 
    len=3, result=0xcfe6df50) at fs/namev.c:52
#8  0xc0021c7a in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:371
#9  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#10 0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#11 0xbbbbbbbb in ?? ()
#12 0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#13 0x00000000 in ?? ()
(gdb) n
118	        KASSERT(0 < vn->vn_refcount);
(gdb) n
119	        vn->vn_refcount++;
(gdb) n
Hardware watchpoint 7: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) n
122	}
(gdb) n
vo_vref (o=0xcfe8400c) at fs/vn_mmobj_ops.c:34
34	}
(gdb) n
pframe_alloc (o=0xcfe8400c, pagenum=0) at mm/pframe.c:270
270	        o->mmo_nrespages++;
(gdb) n
271	        list_insert_head(&o->mmo_respages, &pf->pf_olink);
(gdb) n
273	        return pf;
(gdb) n
274	}
(gdb) n
pframe_get (o=0xcfe8400c, pagenum=0, result=0xcfe6dda0)
    at mm/pframe.c:369
369			if(*result==NULL){
(gdb) n
375	                temp =pframe_fill(*result);
(gdb) n
376	                if(temp<0){
(gdb) n
383			while(pframe_is_busy(*result)){
(gdb) n
387			if(p==1){
(gdb) n
390			dbg(DBG_PRINT, "(GRADING3F pframe_get.3)\n");
(gdb) n
393		KASSERT(NULL != *result);
(gdb) n
394		KASSERT(!pframe_is_busy(*result));
(gdb) n
395		dbg(DBG_PRINT, "(GRADING3A 1.a)\n");
(gdb) n
396		return 0;
(gdb) n
397	}
(gdb) n
0xc00502d8 in s5_read_file ()
(gdb) n
Single stepping until exit from function s5_read_file,
which has no line number information.
0xc00511a8 in s5_find_dirent ()
(gdb) n
Single stepping until exit from function s5_find_dirent,
which has no line number information.
0xc004de33 in s5fs_lookup ()
(gdb) n
Single stepping until exit from function s5fs_lookup,
which has no line number information.
lookup (dir=0xcfe84004, name=0xc0053aff "dev", len=3, 
    result=0xcfe6df50) at fs/namev.c:53
53	        dbg(DBG_PRINT, "(GRADING2B)\n");
(gdb) n
58	    dbg(DBG_PRINT, "(GRADING2B)\n");
(gdb) n
59	    return ref;
(gdb) n
60	}
(gdb) n
do_mkdir (path=0xc0053afe "/dev") at fs/vfs_syscall.c:373
373	            		if(temp_lookup == 0){
(gdb) n
381	            		if(temp_lookup == -ENOENT){
(gdb) n
382	                		KASSERT(NULL != parent_vnode->vn_ops->mkdir);
(gdb) n
383	                		dbg(DBG_PRINT, "(GRADING2A 3.c)\n");
(gdb) n
385	                		temp_mkdir = parent_vnode->vn_ops->mkdir(parent_vnode, name, namelen);
(gdb) p parent_vnode
$1 = (vnode_t *) 0xcfe84004
(gdb) step

Breakpoint 5, vref (vn=0xcfe84080) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) p vn->vn_ref_count
There is no member named vn_ref_count.
(gdb) p vn->vn_ref_count)(vn->vn_ref_count)[C[C[C[C[C[C[C[C[C&(vn->vn_ref_count)[C[C[C[C[C[C[C[C[C
There is no member named vn_ref_count.
(gdb) n
118	        KASSERT(0 < vn->vn_refcount);
(gdb) np &(vn->vn_ref_count)
There is no member named vn_ref_count.
(gdb) p &(vn->vn_ref_count)[C[C[C[C[1Pcount)
$2 = (int *) 0xcfe8408c
(gdb) watch *0xcfe8408c
Hardware watchpoint 8: *0xcfe8408c
(gdb) c
Continuing.
Hardware watchpoint 8: *0xcfe8408c

Old value = 1
New value = 2
vref (vn=0xcfe84080) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84080) at fs/vnode.c:120
#1  0xc00246d4 in vo_vref (o=0xcfe84088) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe84088, pagenum=0)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe84088, pagenum=0, 
    result=0xcfe6ddc0) at mm/pframe.c:368
#4  0xc004ff7f in s5_write_file ()
#5  0xc0051781 in s5_link ()
#6  0xc004e1a2 in s5fs_mkdir ()
#7  0xc0021e2f in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:385
#8  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#9  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#10 0xbbbbbbbb in ?? ()
#11 0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#12 0x00000000 in ?? ()
(gdb) c
Continuing.

Breakpoint 6, vput (vn=0xcfe84080) at fs/vnode.c:241
241	        KASSERT(vn);
(gdb) where
#0  vput (vn=0xcfe84080) at fs/vnode.c:241
#1  0xc004e754 in s5fs_mkdir ()
#2  0xc0021e2f in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:385
#3  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) clear
Deleted breakpoint 6 
(gdb) c
Continuing.
Hardware watchpoint 8: *0xcfe8408c

Old value = 2
New value = 1
0xc0025293 in vput (vn=0xcfe84080) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) where
#0  0xc0025293 in vput (vn=0xcfe84080) at fs/vnode.c:282
#1  0xc004e754 in s5fs_mkdir ()
#2  0xc0021e2f in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:385
#3  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 7: *0xcfe84010

Old value = 5
New value = 4
0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) where
#0  0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
#1  0xc0021e3d in do_mkdir (path=0xc0053afe "/dev")
    at fs/vfs_syscall.c:386
#2  0xc000725b in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:234
#3  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#4  0xbbbbbbbb in ?? ()
#5  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#6  0x00000000 in ?? ()
(gdb) c
Continuing.

Breakpoint 5, vref (vn=0xcfe84004) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:117
#1  0xc001e3b2 in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:160
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) clear
Deleted breakpoint 5 
(gdb) c
Continuing.
Hardware watchpoint 7: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) clearwhere
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001e3b2 in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:160
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 8: *0xcfe8408c

Old value = 1
New value = 2
vref (vn=0xcfe84080) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwhere
#0  vref (vn=0xcfe84080) at fs/vnode.c:120
#1  0xc0024d42 in vget (fs=0xcfea0518, vno=39) at fs/vnode.c:154
#2  0xc004defa in s5fs_lookup ()
#3  0xc001d6a5 in lookup (dir=0xcfe84004, 
    name=0xc0053b04 "dev/null", len=3, result=0xcfe6dea4)
    at fs/namev.c:52
#4  0xc001e714 in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:200
#5  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#6  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#7  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#8  0xbbbbbbbb in ?? ()
#9  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#10 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 7: *0xcfe84010

Old value = 5
New value = 4
0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) where
#0  0xc0025293 in vput (vn=0xcfe84004) at fs/vnode.c:282
#1  0xc001e807 in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:209
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 8: *0xcfe8408c

Old value = 2
New value = 1
0xc0025293 in vput (vn=0xcfe84080) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) where
#0  0xc0025293 in vput (vn=0xcfe84080) at fs/vnode.c:282
#1  0xc001ebe4 in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:232
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 7: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001ebef in dir_namev (pathname=0xc0053b03 "/dev/null", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:233
#2  0xc00214b5 in do_mknod (path=0xc0053b03 "/dev/null", 
    mode=256, devid=256) at fs/vfs_syscall.c:295
#3  0xc0007277 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:235
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) c[Kq
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
  Compiling "kernel/fs/namev.c"...
  Compiling "kernel/fs/vfs_syscall.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data,  9.8g free
Added to ISO image: directory '/'='/tmp/grub.2KaZkt'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) b 234
Breakpoint 4 at 0xc000724f: file main/kmain.c, line 234.
(gdb) c
Continuing.

Breakpoint 4, idleproc_run (arg1=0, arg2=0x0) at main/kmain.c:234
234	        do_mkdir("/dev");
(gdb) watch *0xcfe84010
Hardware watchpoint 5: *0xcfe84010
(gdb) watch *0xcfe84010[K[K8c
Hardware watchpoint 6: *0xcfe8408c
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 3
New value = 4
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = -1145324613
New value = -1145324800
0xc000af25 in memset (s=0xcfe84080, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = -1145324800
New value = -1145372672
0xc000af25 in memset (s=0xcfe84080, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = -1145372672
New value = -1157627904
0xc000af25 in memset (s=0xcfe84080, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = -1157627904
New value = 0
0xc000af25 in memset (s=0xcfe84080, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=39) at fs/vnode.c:212
212	        return vn;
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 1
New value = 2
vref (vn=0xcfe84080) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 2
New value = 1
0xc0025288 in vput (vn=0xcfe84080) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 5
New value = 4
0xc0025288 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 1
New value = 2
vref (vn=0xcfe84080) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 5
New value = 4
0xc0025288 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 2
New value = 1
0xc0025288 in vput (vn=0xcfe84080) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c[Kwhere
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001e3b2 in dir_namev (pathname=0xc0053b0d "/dev/zero", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:160
#2  0xc00214aa in do_mknod (path=0xc0053b0d "/dev/zero", 
    mode=256, devid=257) at fs/vfs_syscall.c:295
#3  0xc0007293 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:236
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 1
New value = 2
vref (vn=0xcfe84080) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 5
New value = 4
0xc0025288 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 2
New value = 1
0xc0025288 in vput (vn=0xcfe84080) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c[Kwhere
#0  0xc0025288 in vput (vn=0xcfe84080) at fs/vnode.c:282
#1  0xc00216a8 in do_mknod (path=0xc0053b0d "/dev/zero", 
    mode=256, devid=257) at fs/vfs_syscall.c:310
#2  0xc0007293 in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:236
#3  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#4  0xbbbbbbbb in ?? ()
#5  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#6  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001e3b2 in dir_namev (pathname=0xc0053b17 "/dev/tty0", 
    namelen=0xcfe6df48, name=0xcfe6df4c, base=0x0, 
    res_vnode=0xcfe6df54) at fs/namev.c:160
#2  0xc00214aa in do_mknod (path=0xc0053b17 "/dev/tty0", 
    mode=256, devid=512) at fs/vfs_syscall.c:295
#3  0xc00072af in idleproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:237
#4  0xc00119a6 in __context_initial_func (
    func=0xc00071fa <idleproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#5  0xbbbbbbbb in ?? ()
#6  0xc00071fa in bootstrap (arg1=0, arg2=0xbbbbbbbb)
    at main/kmain.c:195
#7  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 1
New value = 2
vref (vn=0xcfe84080) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 5
New value = 4
0xc0025288 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 2
New value = 1
0xc0025288 in vput (vn=0xcfe84080) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001e3b2 in dir_namev (pathname=0xcfe5db5c "/dev/tty0", 
    namelen=0xcfe5da3c, name=0xcfe5da30, base=0x0, 
    res_vnode=0xcfe5da38) at fs/namev.c:160
#2  0xc001ecd7 in open_namev (pathname=0xcfe5db5c "/dev/tty0", 
    flag=2, res_vnode=0xcfe5daf0, base=0x0) at fs/namev.c:256
#3  0xc001fae7 in do_open (filename=0xcfe5db5c "/dev/tty0", 
    oflags=2) at fs/open.c:149
#4  0xc003568e in kshell_create (ttyid=0 '\000')
    at test/kshell/kshell.c:116
#5  0xc0007cf4 in initproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:468
#6  0xc00119a6 in __context_initial_func (
    func=0xc0007c10 <initproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#7  0xbbbbbbbb in ?? ()
#8  0xc0007c10 in vm_test (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:431
#9  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 1
New value = 2
vref (vn=0xcfe84080) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 5
New value = 4
0xc0025288 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8408c

Old value = 2
New value = 1
0xc0025288 in vput (vn=0xcfe84080) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 4
New value = 5
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) where
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc0017081 in proc_create (name=0xc0053d6d "vm test")
    at proc/proc.c:263
#2  0xc0007bb1 in vm_test (kshell=0xcfeb7788, argc=1, 
    argv=0xcfe5dd58) at main/kmain.c:425
#3  0xc00364c2 in kshell_execute_next (ksh=0xcfeb7788)
    at test/kshell/kshell.c:456
#4  0xc0007d2f in initproc_run (arg1=0, arg2=0x0)
    at main/kmain.c:470
#5  0xc00119a6 in __context_initial_func (
    func=0xc0007c10 <initproc_run>, arg1=0, arg2=0x0)
    at proc/context.c:39
#6  0xbbbbbbbb in ?? ()
#7  0xc0007c10 in vm_test (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:431
#8  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 5
New value = 6
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwhere
#0  vref (vn=0xcfe84004) at fs/vnode.c:120
#1  0xc001e3b2 in dir_namev (
    pathname=0xc0053d1e "/usr/bin/hello", namelen=0xcfe1ddcc, 
    name=0xcfe1ddc0, base=0x0, res_vnode=0xcfe1ddc8)
    at fs/namev.c:160
#2  0xc001ecd7 in open_namev (
    pathname=0xc0053d1e "/usr/bin/hello", flag=0, 
    res_vnode=0xcfe1de80, base=0x0) at fs/namev.c:256
#3  0xc001fae7 in do_open (filename=0xc0053d1e "/usr/bin/hello", 
    oflags=0) at fs/open.c:149
#4  0xc002d5fc in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:65
#5  0xc002fb62 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#6  0xc0007ac3 in vm_cases () at main/kmain.c:401
#7  0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#8  0xbbbbbbbb in ?? ()
#9  0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#10 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 6
New value = 5
0xc0025288 in vput (vn=0xcfe84004) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) c
Continuing.
Hardware watchpoint 5: *0xcfe84010

Old value = 5
New value = 6
vref (vn=0xcfe84004) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) c
Continuing.
Warning:
Could not insert hardware watchpoint 5.
Could not insert hardware breakpoints:
You may have requested too many hardware breakpoints/watchpoints.

(gdb) q
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
  Compiling "kernel/fs/namev.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 8977m free
Added to ISO image: directory '/'='/tmp/grub.oeqLBS'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
xorriso : UPDATE :  94.04% done
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) c
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
make[1]: Warning: File `fs/namev.c' has modification time 97 s in the future
  Compiling "kernel/fs/namev.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 8973m free
Added to ISO image: directory '/'='/tmp/grub.Cs5CcK'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
xorriso : UPDATE : Thank you for being patient. Working since 0 seconds.
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: warning:  Clock skew detected.  Your build may be incomplete.
make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) n[K0[Kwatch *0xcfe84270
Hardware watchpoint 4: *0xcfe84270
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = 0
New value = 187
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = 187
New value = 48059
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = 48059
New value = 12303291
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = 12303291
New value = -1145324613
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = -1145324613
New value = -1145324800
0xc000af25 in memset (s=0xcfe84270, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) vrefbvref vref
Breakpoint 5 at 0xc0024a93: file fs/vnode.c, line 117.
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = -1145324800
New value = -1145372672
0xc000af25 in memset (s=0xcfe84270, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = -1145372672
New value = -1157627904
0xc000af25 in memset (s=0xcfe84270, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = -1157627904
New value = 0
0xc000af25 in memset (s=0xcfe84270, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe84270

Old value = 0
New value = -1073403360
0xc004d1fc in s5fs_read_vnode ()
(gdb) 
Continuing.

Breakpoint 5, vref (vn=0xcfe84270) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) p vn->vn_refcount
$1 = 1
(gdb) p vn->vn_refcount)(vn->vn_refcount)[C[C[C[C[C[C[C[C[C&(vn->vn_refcount)[C[C[C[C[C[C[C[C[C
$2 = (int *) 0xcfe8427c
(gdb) where
#0  vref (vn=0xcfe84270) at fs/vnode.c:117
#1  0xc00246c9 in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe84278, pagenum=0)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe84278, pagenum=0, 
    result=0xcfe1dc20) at mm/pframe.c:368
#4  0xc00502c8 in s5_read_file ()
#5  0xc004d866 in s5fs_read ()
#6  0xc00206f0 in do_read (fd=0, buf=0xcfe1de04, nbytes=52)
    at fs/vfs_syscall.c:91
#7  0xc002e122 in _elf32_load_ehdr (fd=0, header=0xcfe1de04, 
    interp=0) at api/elf32.c:168
#8  0xc002efd3 in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:483
#9  0xc002d82b in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#10 0xc002fb62 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#11 0xc0007ac3 in vm_cases () at main/kmain.c:401
#12 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#13 0xbbbbbbbb in ?? ()
#14 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#15 0x00000000 in ?? ()
(gdb) watch *0x[4Pherep &(vn->vn_refcount)[C[C[C[C[C[C[C[C[3Pvn->vn_refcount[C[C[C[C[C[Cc[Kb vrefc[Kwatch *0xcfe84270[Kc
Hardware watchpoint 6: *0xcfe8427c
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8427c

Old value = 1
New value = 2
vref (vn=0xcfe84270) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwatch *0xcfe8427c[C[C[C[C[C[C[Chere[K
#0  vref (vn=0xcfe84270) at fs/vnode.c:120
#1  0xc00246c9 in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe84278, pagenum=0)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe84278, pagenum=0, 
    result=0xcfe1dc20) at mm/pframe.c:368
#4  0xc00502c8 in s5_read_file ()
#5  0xc004d866 in s5fs_read ()
#6  0xc00206f0 in do_read (fd=0, buf=0xcfe1de04, nbytes=52)
    at fs/vfs_syscall.c:91
#7  0xc002e122 in _elf32_load_ehdr (fd=0, header=0xcfe1de04, 
    interp=0) at api/elf32.c:168
#8  0xc002efd3 in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:483
#9  0xc002d82b in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#10 0xc002fb62 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#11 0xc0007ac3 in vm_cases () at main/kmain.c:401
#12 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#13 0xbbbbbbbb in ?? ()
#14 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#15 0x00000000 in ?? ()
(gdb) c
Continuing.

Breakpoint 5, vref (vn=0xcfe84270) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) cwhere
#0  vref (vn=0xcfe84270) at fs/vnode.c:117
#1  0xc00246c9 in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc004d94f in s5fs_mmap ()
#3  0xc002b28c in vmmap_map (map=0xcfe8c074, file=0xcfe84270, 
    lopage=32840, npages=6, prot=5, flags=6, off=0, dir=0, 
    new=0x0) at vm/vmmap.c:384
#4  0xc002dea3 in _elf32_map_segment (map=0xcfe8c074, 
    file=0xcfe84270, memoff=0, segment=0xcfea0fc8)
    at api/elf32.c:111
#5  0xc002e8dd in _elf32_map_progsegs (vnode=0xcfe84270, 
    map=0xcfe8c074, header=0xcfe1de04, pht=0xcfea0fc8 "\001", 
    memoff=0) at api/elf32.c:245
#6  0xc002f08e in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:502
#7  0xc002d82b in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#8  0xc002fb62 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#9  0xc0007ac3 in vm_cases () at main/kmain.c:401
#10 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#11 0xbbbbbbbb in ?? ()
#12 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#13 0x00000000 in ?? ()
(gdb) n
118	        KASSERT(0 < vn->vn_refcount);
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8427c

Old value = 2
New value = 3
vref (vn=0xcfe84270) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cnwhere
#0  vref (vn=0xcfe84270) at fs/vnode.c:120
#1  0xc00246c9 in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc004d94f in s5fs_mmap ()
#3  0xc002b28c in vmmap_map (map=0xcfe8c074, file=0xcfe84270, 
    lopage=32840, npages=6, prot=5, flags=6, off=0, dir=0, 
    new=0x0) at vm/vmmap.c:384
#4  0xc002dea3 in _elf32_map_segment (map=0xcfe8c074, 
    file=0xcfe84270, memoff=0, segment=0xcfea0fc8)
    at api/elf32.c:111
#5  0xc002e8dd in _elf32_map_progsegs (vnode=0xcfe84270, 
    map=0xcfe8c074, header=0xcfe1de04, pht=0xcfea0fc8 "\001", 
    memoff=0) at api/elf32.c:245
#6  0xc002f08e in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:502
#7  0xc002d82b in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#8  0xc002fb62 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#9  0xc0007ac3 in vm_cases () at main/kmain.c:401
#10 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#11 0xbbbbbbbb in ?? ()
#12 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#13 0x00000000 in ?? ()
(gdb) wherec[K
Continuing.

Breakpoint 5, vref (vn=0xcfe84270) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) cwhere
#0  vref (vn=0xcfe84270) at fs/vnode.c:117
#1  0xc00246c9 in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc004d94f in s5fs_mmap ()
#3  0xc002b28c in vmmap_map (map=0xcfe8c074, file=0xcfe84270, 
    lopage=32846, npages=1, prot=3, flags=6, off=20480, dir=0, 
    new=0x0) at vm/vmmap.c:384
#4  0xc002dea3 in _elf32_map_segment (map=0xcfe8c074, 
    file=0xcfe84270, memoff=0, segment=0xcfea0fe8)
    at api/elf32.c:111
#5  0xc002e8dd in _elf32_map_progsegs (vnode=0xcfe84270, 
    map=0xcfe8c074, header=0xcfe1de04, pht=0xcfea0fc8 "\001", 
    memoff=0) at api/elf32.c:245
#6  0xc002f08e in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:502
#7  0xc002d82b in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#8  0xc002fb62 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#9  0xc0007ac3 in vm_cases () at main/kmain.c:401
#10 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#11 0xbbbbbbbb in ?? ()
#12 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#13 0x00000000 in ?? ()
(gdb) wherec[K
Continuing.
Hardware watchpoint 6: *0xcfe8427c

Old value = 3
New value = 4
vref (vn=0xcfe84270) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) clear
No breakpoint at this line.
(gdb) clear[K
Continuing.

Breakpoint 5, vref (vn=0xcfe84270) at fs/vnode.c:117
117	        KASSERT(vn);
(gdb) clear[Kwherec[Kwherec[Knwherec[Kwherec[Kwatch *0xcfe8427c
Hardware watchpoint 7: *0xcfe8427c
(gdb) watch *0xcfe8427c[C[C[C[C[C[Cc[Klear
Deleted breakpoint 5 
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8427c

Old value = 4
New value = 5
Hardware watchpoint 7: *0xcfe8427c

Old value = 4
New value = 5
vref (vn=0xcfe84270) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) clearwatch *0xcfe8427c[C[C[C[C[C[Cc[Klear[Kwherec[Kwhere
#0  vref (vn=0xcfe84270) at fs/vnode.c:120
#1  0xc00246c9 in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe84278, pagenum=5)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe84278, pagenum=5, 
    result=0xcfe1dc20) at mm/pframe.c:368
#4  0xc00502c8 in s5_read_file ()
#5  0xc004d866 in s5fs_read ()
#6  0xc002e082 in _elf32_map_segment (map=0xcfe8c074, 
    file=0xcfe84270, memoff=0, segment=0xcfea0fe8)
    at api/elf32.c:144
#7  0xc002e8dd in _elf32_map_progsegs (vnode=0xcfe84270, 
    map=0xcfe8c074, header=0xcfe1de04, pht=0xcfea0fc8 "\001", 
    memoff=0) at api/elf32.c:245
#8  0xc002f08e in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:502
#9  0xc002d82b in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#10 0xc002fb62 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#11 0xc0007ac3 in vm_cases () at main/kmain.c:401
#12 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#13 0xbbbbbbbb in ?? ()
#14 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
---Type <return> to continue, or q <return> to quit---
    argv=0xbbbbbbbb) at main/kmain.c:391
#15 0x00000000 in ?? ()
(gdb) wherec[K
Continuing.
Hardware watchpoint 6: *0xcfe8427c

Old value = 5
New value = 4
Hardware watchpoint 7: *0xcfe8427c

Old value = 5
New value = 4
0xc0025288 in vput (vn=0xcfe84270) at fs/vnode.c:282
282	        if (0 < --vn->vn_refcount)
(gdb) cwhere
#0  0xc0025288 in vput (vn=0xcfe84270) at fs/vnode.c:282
#1  0xc001d461 in fput (f=0xcfe2f024) at fs/file.c:128
#2  0xc0020cf4 in do_close (fd=0) at fs/vfs_syscall.c:161
#3  0xc002d86b in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:102
#4  0xc002fb62 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#5  0xc0007ac3 in vm_cases () at main/kmain.c:401
#6  0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#7  0xbbbbbbbb in ?? ()
#8  0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#9  0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 6: *0xcfe8427c

Old value = 4
New value = 5
Hardware watchpoint 7: *0xcfe8427c

Old value = 4
New value = 5
vref (vn=0xcfe84270) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwherec[Kwhere
#0  vref (vn=0xcfe84270) at fs/vnode.c:120
#1  0xc00246c9 in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe84278, pagenum=3)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe84278, pagenum=3, 
    result=0xcfe1dd8c) at mm/pframe.c:368
#4  0xc0028ff3 in shadow_fillpage (o=0xcfe28004, pf=0xcfe303f4)
    at vm/shadow.c:237
#5  0xc000ee27 in pframe_fill (pf=0xcfe303f4) at mm/pframe.c:327
#6  0xc000ef55 in pframe_get (o=0xcfe28004, pagenum=3, 
    result=0xcfe1de9c) at mm/pframe.c:375
#7  0xc002891c in shadow_lookuppage (o=0xcfe28004, pagenum=3, 
    forwrite=0, pf=0xcfe1df0c) at vm/shadow.c:185
#8  0xc0027b66 in handle_pagefault (vaddr=134525122, cause=4)
    at vm/pagefault.c:97
#9  0xc000db53 in _pt_fault_handler (regs=0xcfe1dfbc)
    at mm/pagetable.c:251
#10 0xc0004235 in __intr_handler (regs=...)
    at main/interrupt.c:395
#11 0xc0002853 in __intr_handler14 ()
    at include/main/interrupt.h:106
#12 0x00000023 in ?? ()
#13 0x00000023 in ?? ()
#14 0x00000000 in ?? ()
(gdb) wherec[K
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) Quit
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
make[1]: Warning: File `proc/proc.c' has modification time 42 s in the future
  Compiling "kernel/proc/proc.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 8905m free
Added to ISO image: directory '/'='/tmp/grub.rSi7hp'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: warning:  Clock skew detected.  Your build may be incomplete.
make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) c
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
  Compiling "kernel/vm/vmmap.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 8895m free
Added to ISO image: directory '/'='/tmp/grub.oKLkLJ'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
xorriso : UPDATE :  86.17% done
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) watch *0c[Kxcfe8427c
Hardware watchpoint 4: *0xcfe8427c
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = 717
New value = 699
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = 699
New value = 48059
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = 48059
New value = 12303291
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = 12303291
New value = -1145324613
0xc000af25 in memset (s=0xcfe84000, c=187, count=16384)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.


Hardware watchpoint 4: *0xcfe8427c

Old value = -1145324613
New value = -1145324800
0xc000af25 in memset (s=0xcfe84270, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = -1145324800
New value = -1145372672
0xc000af25 in memset (s=0xcfe84270, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = -1145372672
New value = -1157627904
0xc000af25 in memset (s=0xcfe84270, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = -1157627904
New value = 0
0xc000af25 in memset (s=0xcfe84270, c=0, count=108)
    at util/string.c:61
61	        __asm__ volatile(
(gdb) 
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = 0
New value = 1
vget (fs=0xcfea0518, vno=30) at fs/vnode.c:212
212	        return vn;
(gdb) cwatch *0xcfe8427c[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kwhere
#0  vget (fs=0xcfea0518, vno=30) at fs/vnode.c:212
#1  0xc004df9a in s5fs_lookup ()
#2  0xc001d6b8 in lookup (dir=0xcfe841f4, 
    name=0xc0053d27 "hello", len=5, result=0xcfe1ddc4)
    at fs/namev.c:52
#3  0xc001ee5c in open_namev (
    pathname=0xc0053d1e "/usr/bin/hello", flag=0, 
    res_vnode=0xcfe1de80, base=0x0) at fs/namev.c:268
#4  0xc001fafa in do_open (filename=0xc0053d1e "/usr/bin/hello", 
    oflags=0) at fs/open.c:149
#5  0xc002d6ab in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:65
#6  0xc002fc11 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#7  0xc0007ac3 in vm_cases () at main/kmain.c:401
#8  0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#9  0xbbbbbbbb in ?? ()
#10 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#11 0x00000000 in ?? ()
(gdb) c
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = 1
New value = 2
vref (vn=0xcfe84270) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwhere
#0  vref (vn=0xcfe84270) at fs/vnode.c:120
#1  0xc00246dc in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc000eb26 in pframe_alloc (o=0xcfe84278, pagenum=0)
    at mm/pframe.c:269
#3  0xc000ee9e in pframe_get (o=0xcfe84278, pagenum=0, 
    result=0xcfe1dc20) at mm/pframe.c:368
#4  0xc0050378 in s5_read_file ()
#5  0xc004d916 in s5fs_read ()
#6  0xc0020703 in do_read (fd=0, buf=0xcfe1de04, nbytes=52)
    at fs/vfs_syscall.c:91
#7  0xc002e1d1 in _elf32_load_ehdr (fd=0, header=0xcfe1de04, 
    interp=0) at api/elf32.c:168
#8  0xc002f082 in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:483
#9  0xc002d8da in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#10 0xc002fc11 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#11 0xc0007ac3 in vm_cases () at main/kmain.c:401
#12 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#13 0xbbbbbbbb in ?? ()
#14 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#15 0x00000000 in ?? ()
(gdb) wherec[K
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = 2
New value = 3
vref (vn=0xcfe84270) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwherec[Kwhere
#0  vref (vn=0xcfe84270) at fs/vnode.c:120
#1  0xc00246dc in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc004d9ff in s5fs_mmap ()
#3  0xc002b29f in vmmap_map (map=0xcfe8c074, file=0xcfe84270, 
    lopage=32840, npages=6, prot=5, flags=6, off=0, dir=0, 
    new=0x0) at vm/vmmap.c:384
#4  0xc002df52 in _elf32_map_segment (map=0xcfe8c074, 
    file=0xcfe84270, memoff=0, segment=0xcfea0fc8)
    at api/elf32.c:111
#5  0xc002e98c in _elf32_map_progsegs (vnode=0xcfe84270, 
    map=0xcfe8c074, header=0xcfe1de04, pht=0xcfea0fc8 "\001", 
    memoff=0) at api/elf32.c:245
#6  0xc002f13d in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:502
#7  0xc002d8da in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#8  0xc002fc11 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#9  0xc0007ac3 in vm_cases () at main/kmain.c:401
#10 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#11 0xbbbbbbbb in ?? ()
#12 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#13 0x00000000 in ?? ()
(gdb) wherec[K
Continuing.
Hardware watchpoint 4: *0xcfe8427c

Old value = 3
New value = 4
vref (vn=0xcfe84270) at fs/vnode.c:120
120	        dbg(DBG_VNREF, "vref: 0x%p, 0x%p ino %ld up to %d, nrespages=%d\n",
(gdb) cwherec[Kwhere
#0  vref (vn=0xcfe84270) at fs/vnode.c:120
#1  0xc00246dc in vo_vref (o=0xcfe84278) at fs/vn_mmobj_ops.c:33
#2  0xc004d9ff in s5fs_mmap ()
#3  0xc002b29f in vmmap_map (map=0xcfe8c074, file=0xcfe84270, 
    lopage=32846, npages=1, prot=3, flags=6, off=20480, dir=0, 
    new=0x0) at vm/vmmap.c:384
#4  0xc002df52 in _elf32_map_segment (map=0xcfe8c074, 
    file=0xcfe84270, memoff=0, segment=0xcfea0fe8)
    at api/elf32.c:111
#5  0xc002e98c in _elf32_map_progsegs (vnode=0xcfe84270, 
    map=0xcfe8c074, header=0xcfe1de04, pht=0xcfea0fc8 "\001", 
    memoff=0) at api/elf32.c:245
#6  0xc002f13d in _elf32_load (
    filename=0xc0053d1e "/usr/bin/hello", fd=0, argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/elf32.c:502
#7  0xc002d8da in binfmt_load (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac, eip=0xcfe1df7c, esp=0xcfe1df78)
    at api/binfmt.c:92
#8  0xc002fc11 in kernel_execve (
    filename=0xc0053d1e "/usr/bin/hello", argv=0xcfe1dfb0, 
    envp=0xcfe1dfac) at api/exec.c:72
#9  0xc0007ac3 in vm_cases () at main/kmain.c:401
#10 0xc00119a6 in __context_initial_func (
    func=0xc0007a95 <vm_cases>, arg1=0, arg2=0x0)
    at proc/context.c:39
#11 0xbbbbbbbb in ?? ()
#12 0xc0007a95 in sunghan_deadlock (kshell=0x0, argc=-1145324613, 
    argv=0xbbbbbbbb) at main/kmain.c:391
#13 0x00000000 in ?? ()
(gdb) wherec[K
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) where
#0  dbg_panic_halt () at util/debug.c:190
#1  0xc000862d in dbg_panic (file=0xc00556c1 "mm/pagetable.c", 
    line=253, 
    func=0xc00559d9 <__func__.1676> "_pt_fault_handler", 
    fmt=0xc005583c "\nPage faulted while accessing 0x%08x\n")
    at util/debug.c:207
#2  0xc000db80 in _pt_fault_handler (regs=0xcfe1dad8)
    at mm/pagetable.c:253
#3  0xc0004235 in __intr_handler (regs=...)
    at main/interrupt.c:395
#4  0xc0002853 in __intr_handler14 ()
    at include/main/interrupt.h:106
#5  0x00000010 in ?? ()
#6  0x00000010 in ?? ()
#7  0x01000000 in ?? ()
#8  0x00000000 in ?? ()
(gdb) frame 2
#2  0xc000db80 in _pt_fault_handler (regs=0xcfe1dad8)
    at mm/pagetable.c:253
253	                panic("\nPage faulted while accessing 0x%08x\n", vaddr);
(gdb) p/x t[Kregs->r_eip
$1 = 0xc002bec6
(gdb) disas /m 0xc002bec6
Dump of assembler code for function vmmap_remove:
470	{
   0xc002b979 <+0>:	push   %ebp
   0xc002b97a <+1>:	mov    %esp,%ebp
   0xc002b97c <+3>:	push   %edi
   0xc002b97d <+4>:	push   %esi
   0xc002b97e <+5>:	push   %ebx
   0xc002b97f <+6>:	sub    $0x8c,%esp

471	        //NOT_YET_IMPLEMENTED("VM: vmmap_remove");
472	        vmarea_t *vma;
473	        list_iterate_begin(&map->vmm_list, vma, vmarea_t, vma_plink) {
   0xc002b985 <+12>:	mov    0x8(%ebp),%eax
   0xc002b988 <+15>:	mov    (%eax),%eax
   0xc002b98a <+17>:	mov    %eax,-0x1c(%ebp)
   0xc002b98d <+20>:	jmp    0xc002bfd1 <vmmap_remove+1624>
   0xc002b992 <+25>:	mov    -0x1c(%ebp),%eax
   0xc002b995 <+28>:	sub    $0x1c,%eax
   0xc002b998 <+31>:	mov    %eax,-0x20(%ebp)
   0xc002b99b <+34>:	mov    -0x1c(%ebp),%eax
   0xc002b99e <+37>:	mov    (%eax),%eax
   0xc002b9a0 <+39>:	mov    %eax,-0x24(%ebp)
   0xc002bfcb <+1618>:	mov    -0x24(%ebp),%eax
   0xc002bfce <+1621>:	mov    %eax,-0x1c(%ebp)
   0xc002bfd1 <+1624>:	mov    0x8(%ebp),%eax
   0xc002bfd4 <+1627>:	cmp    -0x1c(%ebp),%eax
   0xc002bfd7 <+1630>:	jne    0xc002b992 <vmmap_remove+25>

474	            if (lopage > vma->vma_start && lopage < vma->vma_end) {/* Case 1 and 2 */
---Type <return> to continue, or q <return> to quit---
   0xc002b9a3 <+42>:	mov    -0x20(%ebp),%eax
   0xc002b9a6 <+45>:	mov    (%eax),%eax
   0xc002b9a8 <+47>:	cmp    0xc(%ebp),%eax
   0xc002b9ab <+50>:	jae    0xc002bd0c <vmmap_remove+915>
   0xc002b9b1 <+56>:	mov    -0x20(%ebp),%eax
   0xc002b9b4 <+59>:	mov    0x4(%eax),%eax
   0xc002b9b7 <+62>:	cmp    0xc(%ebp),%eax
   0xc002b9ba <+65>:	jbe    0xc002bd0c <vmmap_remove+915>

475	                /*Case1  The region to be unmapped lies completely inside the vmarea. We need to
476	                 * split the old vmarea into two vmareas. be sure to increment the
477	                 * reference count to the file associated with the vmarea. */
478	                if ((lopage + npages) < vma->vma_end) {
   0xc002b9c0 <+71>:	mov    0x10(%ebp),%edx
   0xc002b9c3 <+74>:	mov    0xc(%ebp),%eax
   0xc002b9c6 <+77>:	add    %eax,%edx
   0xc002b9c8 <+79>:	mov    -0x20(%ebp),%eax
   0xc002b9cb <+82>:	mov    0x4(%eax),%eax
   0xc002b9ce <+85>:	cmp    %eax,%edx
   0xc002b9d0 <+87>:	jae    0xc002bc65 <vmmap_remove+748>
   0xc002bd02 <+905>:	jmp    0xc002bfcb <vmmap_remove+1618>
   0xc002bd07 <+910>:	jmp    0xc002bfcb <vmmap_remove+1618>

479	                    vmarea_t *new_vma = vmarea_alloc();
   0xc002b9d6 <+93>:	call   0xc0029526 <vmarea_alloc>
   0xc002b9db <+98>:	mov    %eax,-0x28(%ebp)

480	                    if (new_vma == NULL)
---Type <return> to continue, or q <return> to quit---
   0xc002b9de <+101>:	cmpl   $0x0,-0x28(%ebp)
   0xc002b9e2 <+105>:	jne    0xc002ba86 <vmmap_remove+269>

481	                    {
482	                        dbg(DBG_PRINT, "(GRADING3F vmmap_remove() 1)\n");
   0xc002b9e8 <+111>:	mov    0xc00790c8,%eax
   0xc002b9ed <+116>:	mov    0xc00790cc,%edx
   0xc002b9f3 <+122>:	mov    %eax,%esi
   0xc002b9f5 <+124>:	and    $0x1000000,%esi
   0xc002b9fb <+130>:	mov    %esi,-0x60(%ebp)
   0xc002b9fe <+133>:	mov    %edx,%eax
   0xc002ba00 <+135>:	and    $0x0,%eax
   0xc002ba03 <+138>:	mov    %eax,-0x5c(%ebp)
   0xc002ba06 <+141>:	mov    -0x60(%ebp),%esi
   0xc002ba09 <+144>:	mov    -0x5c(%ebp),%edi
   0xc002ba0c <+147>:	mov    %edi,%eax
   0xc002ba0e <+149>:	or     %esi,%eax
   0xc002ba10 <+151>:	test   %eax,%eax
   0xc002ba12 <+153>:	je     0xc002ba7c <vmmap_remove+259>
   0xc002ba14 <+155>:	movl   $0x1000000,(%esp)
   0xc002ba1b <+162>:	movl   $0x0,0x4(%esp)
   0xc002ba23 <+170>:	call   0xc0008187 <dbg_color>
   0xc002ba28 <+175>:	mov    %eax,0x4(%esp)
   0xc002ba2c <+179>:	movl   $0xc005a231,(%esp)
   0xc002ba33 <+186>:	call   0xc000826e <dbg_print>
   0xc002ba38 <+191>:	movl   $0xc005abcb,0xc(%esp)
   0xc002ba40 <+199>:	movl   $0x1e2,0x8(%esp)
   0xc002ba48 <+207>:	movl   $0xc005a120,0x4(%esp)
   0xc002ba50 <+215>:	movl   $0xc005a234,(%esp)
   0xc002ba57 <+222>:	call   0xc000826e <dbg_print>
---Type <return> to continue, or q <return> to quit---
   0xc002ba5c <+227>:	movl   $0xc005a7f8,(%esp)
   0xc002ba63 <+234>:	call   0xc000826e <dbg_print>
   0xc002ba68 <+239>:	movl   $0xc005a25f,0x4(%esp)
   0xc002ba70 <+247>:	movl   $0xc005a231,(%esp)
   0xc002ba77 <+254>:	call   0xc000826e <dbg_print>

483	                        return -1;
   0xc002ba7c <+259>:	mov    $0xffffffff,%eax
   0xc002ba81 <+264>:	jmp    0xc002c06e <vmmap_remove+1781>

484	                    }
485	                    vma->vma_end = lopage;
   0xc002ba86 <+269>:	mov    -0x20(%ebp),%edx
   0xc002ba89 <+272>:	mov    0xc(%ebp),%eax
   0xc002ba8c <+275>:	mov    %eax,0x4(%edx)

486	                    new_vma->vma_start = lopage + npages;
   0xc002ba8f <+278>:	mov    0x10(%ebp),%edx
   0xc002ba92 <+281>:	mov    0xc(%ebp),%eax
   0xc002ba95 <+284>:	add    %eax,%edx
   0xc002ba97 <+286>:	mov    -0x28(%ebp),%eax
   0xc002ba9a <+289>:	mov    %edx,(%eax)

487	                    new_vma->vma_end = vma->vma_end;
   0xc002ba9c <+291>:	mov    -0x20(%ebp),%eax
   0xc002ba9f <+294>:	mov    0x4(%eax),%edx
   0xc002baa2 <+297>:	mov    -0x28(%ebp),%eax
   0xc002baa5 <+300>:	mov    %edx,0x4(%eax)

488	                    new_vma->vma_prot = vma->vma_prot;
   0xc002baa8 <+303>:	mov    -0x20(%ebp),%eax
---Type <return> to continue, or q <return> to quit---
   0xc002baab <+306>:	mov    0xc(%eax),%edx
   0xc002baae <+309>:	mov    -0x28(%ebp),%eax
   0xc002bab1 <+312>:	mov    %edx,0xc(%eax)

489	                    new_vma->vma_flags = vma->vma_flags;
   0xc002bab4 <+315>:	mov    -0x20(%ebp),%eax
   0xc002bab7 <+318>:	mov    0x10(%eax),%edx
   0xc002baba <+321>:	mov    -0x28(%ebp),%eax
   0xc002babd <+324>:	mov    %edx,0x10(%eax)

490	                    new_vma->vma_off = vma->vma_off + lopage + npages - vma->vma_start;
   0xc002bac0 <+327>:	mov    -0x20(%ebp),%eax
   0xc002bac3 <+330>:	mov    0x8(%eax),%edx
   0xc002bac6 <+333>:	mov    0xc(%ebp),%eax
   0xc002bac9 <+336>:	add    %eax,%edx
   0xc002bacb <+338>:	mov    0x10(%ebp),%eax
   0xc002bace <+341>:	add    %eax,%edx
   0xc002bad0 <+343>:	mov    -0x20(%ebp),%eax
   0xc002bad3 <+346>:	mov    (%eax),%eax
   0xc002bad5 <+348>:	sub    %eax,%edx
   0xc002bad7 <+350>:	mov    -0x28(%ebp),%eax
   0xc002bada <+353>:	mov    %edx,0x8(%eax)

491	                    new_vma->vma_obj = vma->vma_obj;
   0xc002badd <+356>:	mov    -0x20(%ebp),%eax
   0xc002bae0 <+359>:	mov    0x18(%eax),%edx
   0xc002bae3 <+362>:	mov    -0x28(%ebp),%eax
   0xc002bae6 <+365>:	mov    %edx,0x18(%eax)

492	                    new_vma->vma_obj->mmo_ops->ref(new_vma----Type <return> to continue, or q <return> to quit---
>vma_obj);
   0xc002bae9 <+368>:	mov    -0x28(%ebp),%eax
   0xc002baec <+371>:	mov    0x18(%eax),%eax
   0xc002baef <+374>:	mov    (%eax),%eax
   0xc002baf1 <+376>:	mov    (%eax),%edx
   0xc002baf3 <+378>:	mov    -0x28(%ebp),%eax
   0xc002baf6 <+381>:	mov    0x18(%eax),%eax
   0xc002baf9 <+384>:	mov    %eax,(%esp)
   0xc002bafc <+387>:	call   *%edx

493	                    list_link_init(&new_vma->vma_plink);
   0xc002bafe <+389>:	mov    -0x28(%ebp),%eax
   0xc002bb01 <+392>:	movl   $0x0,0x20(%eax)
   0xc002bb08 <+399>:	mov    -0x28(%ebp),%eax
   0xc002bb0b <+402>:	mov    0x20(%eax),%edx
   0xc002bb0e <+405>:	mov    -0x28(%ebp),%eax
   0xc002bb11 <+408>:	mov    %edx,0x1c(%eax)

494	                    list_link_init(&new_vma->vma_olink);
   0xc002bb14 <+411>:	mov    -0x28(%ebp),%eax
   0xc002bb17 <+414>:	movl   $0x0,0x28(%eax)
   0xc002bb1e <+421>:	mov    -0x28(%ebp),%eax
   0xc002bb21 <+424>:	mov    0x28(%eax),%edx
   0xc002bb24 <+427>:	mov    -0x28(%ebp),%eax
   0xc002bb27 <+430>:	mov    %edx,0x24(%eax)

495	 
496	                    mmobj_t *new_obj = mmobj_bottom_obj(new_vma->vma_obj);
   0xc002bb2a <+433>:	mov    -0x28(%ebp),%eax
   0xc002bb2d <+436>:	mov    0x18(%eax),%eax
---Type <return> to continue, or q <return> to quit---
   0xc002bb30 <+439>:	mov    0x1c(%eax),%eax
   0xc002bb33 <+442>:	test   %eax,%eax
   0xc002bb35 <+444>:	jne    0xc002bb3f <vmmap_remove+454>
   0xc002bb37 <+446>:	mov    -0x28(%ebp),%eax
   0xc002bb3a <+449>:	mov    0x18(%eax),%eax
   0xc002bb3d <+452>:	jmp    0xc002bb48 <vmmap_remove+463>
   0xc002bb3f <+454>:	mov    -0x28(%ebp),%eax
   0xc002bb42 <+457>:	mov    0x18(%eax),%eax
   0xc002bb45 <+460>:	mov    0x14(%eax),%eax
   0xc002bb48 <+463>:	mov    %eax,-0x2c(%ebp)

497	                    list_insert_tail(&new_obj->mmo_un.mmo_vmas, &new_vma->vma_olink);
   0xc002bb4b <+466>:	mov    -0x28(%ebp),%eax
   0xc002bb4e <+469>:	add    $0x24,%eax
   0xc002bb51 <+472>:	mov    %eax,-0x30(%ebp)
   0xc002bb54 <+475>:	mov    -0x2c(%ebp),%eax
   0xc002bb57 <+478>:	add    $0x14,%eax
   0xc002bb5a <+481>:	mov    %eax,-0x34(%ebp)
   0xc002bb5d <+484>:	mov    -0x30(%ebp),%edx
   0xc002bb60 <+487>:	mov    -0x34(%ebp),%eax
   0xc002bb63 <+490>:	mov    %eax,(%edx)
   0xc002bb65 <+492>:	mov    -0x34(%ebp),%eax
   0xc002bb68 <+495>:	mov    0x4(%eax),%edx
   0xc002bb6b <+498>:	mov    -0x30(%ebp),%eax
   0xc002bb6e <+501>:	mov    %edx,0x4(%eax)
   0xc002bb71 <+504>:	mov    -0x34(%ebp),%eax
   0xc002bb74 <+507>:	mov    0x4(%eax),%edx
   0xc002bb77 <+510>:	mov    -0x30(%ebp),%eax
   0xc002bb7a <+513>:	mov    %eax,(%edx)
   0xc002bb7c <+515>:	mov    -0x34(%ebp),%edx
---Type <return> to continue, or q <return> to quit---
   0xc002bb7f <+518>:	mov    -0x30(%ebp),%eax
   0xc002bb82 <+521>:	mov    %eax,0x4(%edx)

498	                    pt_unmap_range(curproc->p_pagedir, (uintptr_t)PN_TO_ADDR(vma->vma_end), (uintptr_t)PN_TO_ADDR(new_vma->vma_start));
   0xc002bb85 <+524>:	mov    -0x28(%ebp),%eax
   0xc002bb88 <+527>:	mov    (%eax),%eax
   0xc002bb8a <+529>:	shl    $0xc,%eax
   0xc002bb8d <+532>:	mov    %eax,%ecx
   0xc002bb8f <+534>:	mov    -0x20(%ebp),%eax
   0xc002bb92 <+537>:	mov    0x4(%eax),%eax
   0xc002bb95 <+540>:	shl    $0xc,%eax
   0xc002bb98 <+543>:	mov    %eax,%edx
   0xc002bb9a <+545>:	mov    0xc006f2a0,%eax
   0xc002bb9f <+550>:	mov    0x12c(%eax),%eax
   0xc002bba5 <+556>:	mov    %ecx,0x8(%esp)
   0xc002bba9 <+560>:	mov    %edx,0x4(%esp)
   0xc002bbad <+564>:	mov    %eax,(%esp)
   0xc002bbb0 <+567>:	call   0xc000d7e1 <pt_unmap_range>

499	 
500	                    vmmap_insert(map, new_vma);
   0xc002bbb5 <+572>:	mov    -0x28(%ebp),%eax
   0xc002bbb8 <+575>:	mov    %eax,0x4(%esp)
   0xc002bbbc <+579>:	mov    0x8(%ebp),%eax
   0xc002bbbf <+582>:	mov    %eax,(%esp)
   0xc002bbc2 <+585>:	call   0xc0029c08 <vmmap_insert>

501	                    dbg(DBG_PRINT, "(GRADING3F vmmap_remove() 2)\n");
---Type <return> to continue, or q <return> to quit---
   0xc002bbc7 <+590>:	mov    0xc00790c8,%eax
   0xc002bbcc <+595>:	mov    0xc00790cc,%edx
   0xc002bbd2 <+601>:	mov    %eax,%edi
   0xc002bbd4 <+603>:	and    $0x1000000,%edi
   0xc002bbda <+609>:	mov    %edi,-0x68(%ebp)
   0xc002bbdd <+612>:	mov    %edx,%eax
   0xc002bbdf <+614>:	and    $0x0,%eax
   0xc002bbe2 <+617>:	mov    %eax,-0x64(%ebp)
   0xc002bbe5 <+620>:	mov    -0x68(%ebp),%edx
   0xc002bbe8 <+623>:	mov    -0x64(%ebp),%ecx
   0xc002bbeb <+626>:	mov    %ecx,%eax
   0xc002bbed <+628>:	or     %edx,%eax
   0xc002bbef <+630>:	test   %eax,%eax
   0xc002bbf1 <+632>:	je     0xc002bc60 <vmmap_remove+743>
   0xc002bbf3 <+634>:	movl   $0x1000000,(%esp)
   0xc002bbfa <+641>:	movl   $0x0,0x4(%esp)
   0xc002bc02 <+649>:	call   0xc0008187 <dbg_color>
   0xc002bc07 <+654>:	mov    %eax,0x4(%esp)
   0xc002bc0b <+658>:	movl   $0xc005a231,(%esp)
   0xc002bc12 <+665>:	call   0xc000826e <dbg_print>
   0xc002bc17 <+670>:	movl   $0xc005abcb,0xc(%esp)
   0xc002bc1f <+678>:	movl   $0x1f5,0x8(%esp)
   0xc002bc27 <+686>:	movl   $0xc005a120,0x4(%esp)
   0xc002bc2f <+694>:	movl   $0xc005a234,(%esp)
   0xc002bc36 <+701>:	call   0xc000826e <dbg_print>
   0xc002bc3b <+706>:	movl   $0xc005a816,(%esp)
   0xc002bc42 <+713>:	call   0xc000826e <dbg_print>
   0xc002bc47 <+718>:	movl   $0xc005a25f,0x4(%esp)
   0xc002bc4f <+726>:	movl   $0xc005a231,(%esp)
   0xc002bc56 <+733>:	call   0xc000826e <dbg_print>
   0xc002bc5b <+738>:	jmp    0xc002bd07 <vmmap_remove+910>
---Type <return> to continue, or q <return> to quit---
   0xc002bc60 <+743>:	jmp    0xc002bd07 <vmmap_remove+910>

502	                } else {/*Case 2: The region overlaps the end of the vmarea. Just shorten the length of the mapping. */
503	                    vma->vma_end=lopage;
   0xc002bc65 <+748>:	mov    -0x20(%ebp),%edx
   0xc002bc68 <+751>:	mov    0xc(%ebp),%eax
   0xc002bc6b <+754>:	mov    %eax,0x4(%edx)

504	                    dbg(DBG_PRINT, "(GRADING3F vmmap_remove() 3)\n");
   0xc002bc6e <+757>:	mov    0xc00790c8,%eax
   0xc002bc73 <+762>:	mov    0xc00790cc,%edx
   0xc002bc79 <+768>:	mov    %eax,%edi
   0xc002bc7b <+770>:	and    $0x1000000,%edi
   0xc002bc81 <+776>:	mov    %edi,-0x70(%ebp)
   0xc002bc84 <+779>:	mov    %edx,%eax
   0xc002bc86 <+781>:	and    $0x0,%eax
   0xc002bc89 <+784>:	mov    %eax,-0x6c(%ebp)
   0xc002bc8c <+787>:	mov    -0x70(%ebp),%edx
   0xc002bc8f <+790>:	mov    -0x6c(%ebp),%ecx
   0xc002bc92 <+793>:	mov    %ecx,%eax
   0xc002bc94 <+795>:	or     %edx,%eax
   0xc002bc96 <+797>:	test   %eax,%eax
   0xc002bc98 <+799>:	je     0xc002bd07 <vmmap_remove+910>
   0xc002bc9a <+801>:	movl   $0x1000000,(%esp)
   0xc002bca1 <+808>:	movl   $0x0,0x4(%esp)
   0xc002bca9 <+816>:	call   0xc0008187 <dbg_color>
   0xc002bcae <+821>:	mov    %eax,0x4(%esp)
   0xc002bcb2 <+825>:	movl   $0xc005a231,(%esp)
   0xc002bcb9 <+832>:	call   0xc000826e <dbg_print>
---Type <return> to continue, or q <return> to quit---
   0xc002bcbe <+837>:	movl   $0xc005abcb,0xc(%esp)
   0xc002bcc6 <+845>:	movl   $0x1f8,0x8(%esp)
   0xc002bcce <+853>:	movl   $0xc005a120,0x4(%esp)
   0xc002bcd6 <+861>:	movl   $0xc005a234,(%esp)
   0xc002bcdd <+868>:	call   0xc000826e <dbg_print>
   0xc002bce2 <+873>:	movl   $0xc005a834,(%esp)
   0xc002bce9 <+880>:	call   0xc000826e <dbg_print>
   0xc002bcee <+885>:	movl   $0xc005a25f,0x4(%esp)
   0xc002bcf6 <+893>:	movl   $0xc005a231,(%esp)
   0xc002bcfd <+900>:	call   0xc000826e <dbg_print>

505	                }
506	            } else if (lopage < vma->vma_start && (lopage+npages) > vma->vma_start && (lopage+npages) < vma->vma_end) {
   0xc002bd0c <+915>:	mov    -0x20(%ebp),%eax
   0xc002bd0f <+918>:	mov    (%eax),%eax
   0xc002bd11 <+920>:	cmp    0xc(%ebp),%eax
   0xc002bd14 <+923>:	jbe    0xc002be42 <vmmap_remove+1225>
   0xc002bd1a <+929>:	mov    0x10(%ebp),%edx
   0xc002bd1d <+932>:	mov    0xc(%ebp),%eax
   0xc002bd20 <+935>:	add    %eax,%edx
   0xc002bd22 <+937>:	mov    -0x20(%ebp),%eax
   0xc002bd25 <+940>:	mov    (%eax),%eax
   0xc002bd27 <+942>:	cmp    %eax,%edx
   0xc002bd29 <+944>:	jbe    0xc002be42 <vmmap_remove+1225>
   0xc002bd2f <+950>:	mov    0x10(%ebp),%edx
   0xc002bd32 <+953>:	mov    0xc(%ebp),%eax
   0xc002bd35 <+956>:	add    %eax,%edx
   0xc002bd37 <+958>:	mov    -0x20(%ebp),%eax
   0xc002bd3a <+961>:	mov    0x4(%eax),%eax
   0xc002bd3d <+964>:	cmp    %eax,%edx
---Type <return> to continue, or q <return> to quit---
   0xc002bd3f <+966>:	jae    0xc002be42 <vmmap_remove+1225>
   0xc002be38 <+1215>:	jmp    0xc002bfcb <vmmap_remove+1618>
   0xc002be3d <+1220>:	jmp    0xc002bfcb <vmmap_remove+1618>

507	            /*Case3  The region overlaps the beginning of the vmarea. Move the beginning of
508	             * the mapping (remember to update vma_off), and shorten its length. */
509	                vma->vma_off = vma->vma_off + lopage + npages - vma->vma_start;
   0xc002bd45 <+972>:	mov    -0x20(%ebp),%eax
   0xc002bd48 <+975>:	mov    0x8(%eax),%edx
   0xc002bd4b <+978>:	mov    0xc(%ebp),%eax
   0xc002bd4e <+981>:	add    %eax,%edx
   0xc002bd50 <+983>:	mov    0x10(%ebp),%eax
   0xc002bd53 <+986>:	add    %eax,%edx
   0xc002bd55 <+988>:	mov    -0x20(%ebp),%eax
   0xc002bd58 <+991>:	mov    (%eax),%eax
   0xc002bd5a <+993>:	sub    %eax,%edx
   0xc002bd5c <+995>:	mov    -0x20(%ebp),%eax
   0xc002bd5f <+998>:	mov    %edx,0x8(%eax)

510	                uintptr_t pre_start = vma->vma_start;
   0xc002bd62 <+1001>:	mov    -0x20(%ebp),%eax
   0xc002bd65 <+1004>:	mov    (%eax),%eax
   0xc002bd67 <+1006>:	mov    %eax,-0x38(%ebp)

511	                vma->vma_start = lopage + npages;
   0xc002bd6a <+1009>:	mov    0x10(%ebp),%edx
   0xc002bd6d <+1012>:	mov    0xc(%ebp),%eax
   0xc002bd70 <+1015>:	add    %eax,%edx
---Type <return> to continue, or q <return> to quit---
   0xc002bd72 <+1017>:	mov    -0x20(%ebp),%eax
   0xc002bd75 <+1020>:	mov    %edx,(%eax)

512	                pt_unmap_range(curproc->p_pagedir, (uintptr_t)PN_TO_ADDR(pre_start), (uintptr_t)PN_TO_ADDR(vma->vma_start));
   0xc002bd77 <+1022>:	mov    -0x20(%ebp),%eax
   0xc002bd7a <+1025>:	mov    (%eax),%eax
   0xc002bd7c <+1027>:	shl    $0xc,%eax
   0xc002bd7f <+1030>:	mov    %eax,%ecx
   0xc002bd81 <+1032>:	mov    -0x38(%ebp),%eax
   0xc002bd84 <+1035>:	shl    $0xc,%eax
   0xc002bd87 <+1038>:	mov    %eax,%edx
   0xc002bd89 <+1040>:	mov    0xc006f2a0,%eax
   0xc002bd8e <+1045>:	mov    0x12c(%eax),%eax
   0xc002bd94 <+1051>:	mov    %ecx,0x8(%esp)
   0xc002bd98 <+1055>:	mov    %edx,0x4(%esp)
   0xc002bd9c <+1059>:	mov    %eax,(%esp)
   0xc002bd9f <+1062>:	call   0xc000d7e1 <pt_unmap_range>

513	                dbg(DBG_PRINT, "(GRADING3F vmmap_remove() 4)\n");
   0xc002bda4 <+1067>:	mov    0xc00790c8,%eax
   0xc002bda9 <+1072>:	mov    0xc00790cc,%edx
   0xc002bdaf <+1078>:	mov    %eax,%edi
   0xc002bdb1 <+1080>:	and    $0x1000000,%edi
   0xc002bdb7 <+1086>:	mov    %edi,-0x78(%ebp)
   0xc002bdba <+1089>:	mov    %edx,%eax
   0xc002bdbc <+1091>:	and    $0x0,%eax
   0xc002bdbf <+1094>:	mov    %eax,-0x74(%ebp)
   0xc002bdc2 <+1097>:	mov    -0x78(%ebp),%edx
   0xc002bdc5 <+1100>:	mov    -0x74(%ebp),%ecx
---Type <return> to continue, or q <return> to quit---
   0xc002bdc8 <+1103>:	mov    %ecx,%eax
   0xc002bdca <+1105>:	or     %edx,%eax
   0xc002bdcc <+1107>:	test   %eax,%eax
   0xc002bdce <+1109>:	je     0xc002be3d <vmmap_remove+1220>
   0xc002bdd0 <+1111>:	movl   $0x1000000,(%esp)
   0xc002bdd7 <+1118>:	movl   $0x0,0x4(%esp)
   0xc002bddf <+1126>:	call   0xc0008187 <dbg_color>
   0xc002bde4 <+1131>:	mov    %eax,0x4(%esp)
   0xc002bde8 <+1135>:	movl   $0xc005a231,(%esp)
   0xc002bdef <+1142>:	call   0xc000826e <dbg_print>
   0xc002bdf4 <+1147>:	movl   $0xc005abcb,0xc(%esp)
   0xc002bdfc <+1155>:	movl   $0x201,0x8(%esp)
   0xc002be04 <+1163>:	movl   $0xc005a120,0x4(%esp)
   0xc002be0c <+1171>:	movl   $0xc005a234,(%esp)
   0xc002be13 <+1178>:	call   0xc000826e <dbg_print>
   0xc002be18 <+1183>:	movl   $0xc005a852,(%esp)
   0xc002be1f <+1190>:	call   0xc000826e <dbg_print>
   0xc002be24 <+1195>:	movl   $0xc005a25f,0x4(%esp)
   0xc002be2c <+1203>:	movl   $0xc005a231,(%esp)
   0xc002be33 <+1210>:	call   0xc000826e <dbg_print>

514	            } else if ((vma->vma_start >= lopage) && (vma->vma_end <= lopage+npages)) {
   0xc002be42 <+1225>:	mov    -0x20(%ebp),%eax
   0xc002be45 <+1228>:	mov    (%eax),%eax
   0xc002be47 <+1230>:	cmp    0xc(%ebp),%eax
   0xc002be4a <+1233>:	jb     0xc002bfcb <vmmap_remove+1618>
   0xc002be50 <+1239>:	mov    -0x20(%ebp),%eax
   0xc002be53 <+1242>:	mov    0x4(%eax),%ecx
   0xc002be56 <+1245>:	mov    0x10(%ebp),%edx
   0xc002be59 <+1248>:	mov    0xc(%ebp),%eax
---Type <return> to continue, or q <return> to quit---
   0xc002be5c <+1251>:	add    %edx,%eax
   0xc002be5e <+1253>:	cmp    %eax,%ecx
   0xc002be60 <+1255>:	ja     0xc002bfcb <vmmap_remove+1618>

515	            /*case4  The region completely contains the vmarea. Remove the vmarea from the list. */
516	                list_remove(&vma->vma_plink);
   0xc002be66 <+1261>:	mov    -0x20(%ebp),%eax
   0xc002be69 <+1264>:	add    $0x1c,%eax
   0xc002be6c <+1267>:	mov    %eax,-0x3c(%ebp)
   0xc002be6f <+1270>:	mov    -0x3c(%ebp),%eax
   0xc002be72 <+1273>:	mov    0x4(%eax),%eax
   0xc002be75 <+1276>:	mov    %eax,-0x40(%ebp)
   0xc002be78 <+1279>:	mov    -0x3c(%ebp),%eax
   0xc002be7b <+1282>:	mov    (%eax),%eax
   0xc002be7d <+1284>:	mov    %eax,-0x44(%ebp)
   0xc002be80 <+1287>:	mov    -0x40(%ebp),%edx
   0xc002be83 <+1290>:	mov    -0x44(%ebp),%eax
   0xc002be86 <+1293>:	mov    %eax,(%edx)
   0xc002be88 <+1295>:	mov    -0x44(%ebp),%edx
   0xc002be8b <+1298>:	mov    -0x40(%ebp),%eax
   0xc002be8e <+1301>:	mov    %eax,0x4(%edx)
   0xc002be91 <+1304>:	mov    -0x3c(%ebp),%eax
   0xc002be94 <+1307>:	movl   $0x0,0x4(%eax)
   0xc002be9b <+1314>:	mov    -0x3c(%ebp),%eax
   0xc002be9e <+1317>:	mov    0x4(%eax),%edx
   0xc002bea1 <+1320>:	mov    -0x3c(%ebp),%eax
   0xc002bea4 <+1323>:	mov    %edx,(%eax)

517	                list_remove(&vma->vma_olink);
   0xc002bea6 <+1325>:	mov    -0x20(%ebp),%eax
---Type <return> to continue, or q <return> to quit---
   0xc002bea9 <+1328>:	add    $0x24,%eax
   0xc002beac <+1331>:	mov    %eax,-0x48(%ebp)
   0xc002beaf <+1334>:	mov    -0x48(%ebp),%eax
   0xc002beb2 <+1337>:	mov    0x4(%eax),%eax
   0xc002beb5 <+1340>:	mov    %eax,-0x4c(%ebp)
   0xc002beb8 <+1343>:	mov    -0x48(%ebp),%eax
   0xc002bebb <+1346>:	mov    (%eax),%eax
   0xc002bebd <+1348>:	mov    %eax,-0x50(%ebp)
   0xc002bec0 <+1351>:	mov    -0x4c(%ebp),%edx
   0xc002bec3 <+1354>:	mov    -0x50(%ebp),%eax
   0xc002bec6 <+1357>:	mov    %eax,(%edx)
   0xc002bec8 <+1359>:	mov    -0x50(%ebp),%edx
   0xc002becb <+1362>:	mov    -0x4c(%ebp),%eax
   0xc002bece <+1365>:	mov    %eax,0x4(%edx)
   0xc002bed1 <+1368>:	mov    -0x48(%ebp),%eax
   0xc002bed4 <+1371>:	movl   $0x0,0x4(%eax)
   0xc002bedb <+1378>:	mov    -0x48(%ebp),%eax
   0xc002bede <+1381>:	mov    0x4(%eax),%edx
   0xc002bee1 <+1384>:	mov    -0x48(%ebp),%eax
   0xc002bee4 <+1387>:	mov    %edx,(%eax)

518	                vma->vma_obj->mmo_ops->put(vma->vma_obj);
   0xc002bee6 <+1389>:	mov    -0x20(%ebp),%eax
   0xc002bee9 <+1392>:	mov    0x18(%eax),%eax
   0xc002beec <+1395>:	mov    (%eax),%eax
   0xc002beee <+1397>:	mov    0x4(%eax),%edx
   0xc002bef1 <+1400>:	mov    -0x20(%ebp),%eax
   0xc002bef4 <+1403>:	mov    0x18(%eax),%eax
   0xc002bef7 <+1406>:	mov    %eax,(%esp)
   0xc002befa <+1409>:	call   *%edx

---Type <return> to continue, or q <return> to quit---
519	 
520	 
   0xc002befc <+1411>:	mov    -0x20(%ebp),%eax
   0xc002beff <+1414>:	mov    0x4(%eax),%eax
   0xc002bf02 <+1417>:	shl    $0xc,%eax
   0xc002bf05 <+1420>:	mov    %eax,%ecx
   0xc002bf07 <+1422>:	mov    -0x20(%ebp),%eax
   0xc002bf0a <+1425>:	mov    (%eax),%eax
   0xc002bf0c <+1427>:	shl    $0xc,%eax
   0xc002bf0f <+1430>:	mov    %eax,%edx
   0xc002bf11 <+1432>:	mov    0xc006f2a0,%eax
   0xc002bf16 <+1437>:	mov    0x12c(%eax),%eax
   0xc002bf1c <+1443>:	mov    %ecx,0x8(%esp)
   0xc002bf20 <+1447>:	mov    %edx,0x4(%esp)
   0xc002bf24 <+1451>:	mov    %eax,(%esp)
   0xc002bf27 <+1454>:	call   0xc000d7e1 <pt_unmap_range>

521	;
   0xc002bf2c <+1459>:	mov    -0x20(%ebp),%eax
   0xc002bf2f <+1462>:	mov    %eax,(%esp)
   0xc002bf32 <+1465>:	call   0xc0029551 <vmarea_free>

522	;
   0xc002bf37 <+1470>:	mov    0xc00790c8,%eax
   0xc002bf3c <+1475>:	mov    0xc00790cc,%edx
   0xc002bf42 <+1481>:	mov    %eax,%edi
   0xc002bf44 <+1483>:	and    $0x1000000,%edi
   0xc002bf4a <+1489>:	mov    %edi,-0x80(%ebp)
   0xc002bf4d <+1492>:	mov    %edx,%eax
   0xc002bf4f <+1494>:	and    $0x0,%eax
   0xc002bf52 <+1497>:	mov    %eax,-0x7c(%ebp)
---Type <return> to continue, or q <return> to quit---
   0xc002bf55 <+1500>:	mov    -0x80(%ebp),%edx
   0xc002bf58 <+1503>:	mov    -0x7c(%ebp),%ecx
   0xc002bf5b <+1506>:	mov    %ecx,%eax
   0xc002bf5d <+1508>:	or     %edx,%eax
   0xc002bf5f <+1510>:	test   %eax,%eax
   0xc002bf61 <+1512>:	je     0xc002bfcb <vmmap_remove+1618>
   0xc002bf63 <+1514>:	movl   $0x1000000,(%esp)
   0xc002bf6a <+1521>:	movl   $0x0,0x4(%esp)
   0xc002bf72 <+1529>:	call   0xc0008187 <dbg_color>
   0xc002bf77 <+1534>:	mov    %eax,0x4(%esp)
   0xc002bf7b <+1538>:	movl   $0xc005a231,(%esp)
   0xc002bf82 <+1545>:	call   0xc000826e <dbg_print>
   0xc002bf87 <+1550>:	movl   $0xc005abcb,0xc(%esp)
   0xc002bf8f <+1558>:	movl   $0x20a,0x8(%esp)
   0xc002bf97 <+1566>:	movl   $0xc005a120,0x4(%esp)
   0xc002bf9f <+1574>:	movl   $0xc005a234,(%esp)
   0xc002bfa6 <+1581>:	call   0xc000826e <dbg_print>
   0xc002bfab <+1586>:	movl   $0xc005a870,(%esp)
   0xc002bfb2 <+1593>:	call   0xc000826e <dbg_print>
   0xc002bfb7 <+1598>:	movl   $0xc005a25f,0x4(%esp)
   0xc002bfbf <+1606>:	movl   $0xc005a231,(%esp)
   0xc002bfc6 <+1613>:	call   0xc000826e <dbg_print>

523	;
524	}
525	 
526	;
   0xc002bfdd <+1636>:	mov    0xc00790c8,%eax
   0xc002bfe2 <+1641>:	mov    0xc00790cc,%edx
   0xc002bfe8 <+1647>:	mov    %eax,%edi
   0xc002bfea <+1649>:	and    $0x1000000,%edi
---Type <return> to continue, or q <return> to quit---
   0xc002bff0 <+1655>:	mov    %edi,%ebx
   0xc002bff2 <+1657>:	mov    %edx,%eax
   0xc002bff4 <+1659>:	and    $0x0,%eax
   0xc002bff7 <+1662>:	mov    %eax,%esi
   0xc002bff9 <+1664>:	mov    %esi,%eax
   0xc002bffb <+1666>:	or     %ebx,%eax
   0xc002bffd <+1668>:	test   %eax,%eax
   0xc002bfff <+1670>:	je     0xc002c069 <vmmap_remove+1776>
   0xc002c001 <+1672>:	movl   $0x1000000,(%esp)
   0xc002c008 <+1679>:	movl   $0x0,0x4(%esp)
   0xc002c010 <+1687>:	call   0xc0008187 <dbg_color>
   0xc002c015 <+1692>:	mov    %eax,0x4(%esp)
   0xc002c019 <+1696>:	movl   $0xc005a231,(%esp)
   0xc002c020 <+1703>:	call   0xc000826e <dbg_print>
   0xc002c025 <+1708>:	movl   $0xc005abcb,0xc(%esp)
   0xc002c02d <+1716>:	movl   $0x20e,0x8(%esp)
   0xc002c035 <+1724>:	movl   $0xc005a120,0x4(%esp)
   0xc002c03d <+1732>:	movl   $0xc005a234,(%esp)
   0xc002c044 <+1739>:	call   0xc000826e <dbg_print>
   0xc002c049 <+1744>:	movl   $0xc005a88e,(%esp)
   0xc002c050 <+1751>:	call   0xc000826e <dbg_print>
   0xc002c055 <+1756>:	movl   $0xc005a25f,0x4(%esp)
   0xc002c05d <+1764>:	movl   $0xc005a231,(%esp)
   0xc002c064 <+1771>:	call   0xc000826e <dbg_print>

527	;
   0xc002c069 <+1776>:	mov    $0x0,%eax

528	;
   0xc002c06e <+1781>:	add    $0x8c,%esp
   0xc002c074 <+1787>:	pop    %ebx
---Type <return> to continue, or q <return> to quit---
   0xc002c075 <+1788>:	pop    %esi
   0xc002c076 <+1789>:	pop    %edi
   0xc002c077 <+1790>:	pop    %ebp
   0xc002c078 <+1791>:	ret    

End of assembler dump.
(gdb) 
(gdb) 
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
make[1]: Warning: File `vm/vmmap.c' has modification time 1.6e+02 s in the future
  Compiling "kernel/vm/vmmap.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 8896m free
Added to ISO image: directory '/'='/tmp/grub.3OA1B9'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
xorriso : UPDATE :  90.97% done
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: warning:  Clock skew detected.  Your build may be incomplete.
make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) c[Kc
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) q
A debugging session is active.

	Inferior 1 [Remote target] will be killed.

Quit anyway? (y or n) y
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ ./weenix -n -d gddb -w 10[A]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
make[1]: Entering directory `/mnt/shared-mac/weenix/kernel'
make[1]: Warning: File `vm/vmmap.c' has modification time 1.6e+02 s in the future
  Compiling "kernel/vm/vmmap.c"...
  Generating a image for debugging...
  Generating kernel symbols list...
  Linking for "kernel/kernel.bin"...
  Creating "kernel/weenix.iso" from floppy disk image...
ln: failed to create hard link â€˜.iso/boot/kernel.binâ€™ => â€˜kernel.binâ€™: Operation not permitted
xorriso 1.3.2 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:weenix.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data, 8886m free
Added to ISO image: directory '/'='/tmp/grub.Id2GJC'
xorriso : UPDATE : 280 files added in 1 seconds
Added to ISO image: directory '/'='/mnt/shared-mac/weenix/kernel/.iso'
xorriso : UPDATE : 284 files added in 1 seconds
xorriso : NOTE : Copying to System Area: 512 bytes from file '/usr/lib/grub/i386-pc/boot_hybrid.img'
xorriso : UPDATE : Thank you for being patient. Working since 0 seconds.
ISO image produced: 3036 sectors
Written to medium : 3036 sectors at LBA 0
Writing to 'stdio:weenix.iso' completed successfully.

make[1]: warning:  Clock skew detected.  Your build may be incomplete.
make[1]: Leaving directory `/mnt/shared-mac/weenix/kernel'
make[1]: Entering directory `/mnt/shared-mac/weenix/user'
make[1]: Nothing to be done for `all'.
make[1]: Leaving directory `/mnt/shared-mac/weenix/user'
]0;wang631@wang631-VirtualBox: /mnt/shared-mac/weenixwang631@wang631-VirtualBox:/mnt/shared-mac/weenix$ make./weenix -n -d gddb -w 10
/usr/bin/qemu-system-i386
existing qemu-system-i386 killed
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from kernel/weenix.dbg...done.
0xc0006eb8 in kmain () at main/kmain.c:143
143	        while (gdb_wait) ;
memcheck is enabled
Breakpoint 1 at 0xc00085a8: file util/debug.c, line 190.
Breakpoint 2 at 0xc0006f39: file main/kmain.c, line 158.
Breakpoint 3 at 0xc0006f4b: file main/kmain.c, line 180.

Breakpoint 3, bootstrap (arg1=0, arg2=0x0) at main/kmain.c:180
180	        dbgq(DBG_TEST, "SIGNATURE: 53616c7465645f5f69d0f375c5d7ea816c0a99e110b0d670eac4777bc614ab1dbd454daa105f76fc0ba586b5d50bb8a6\n");
(gdb) c
Continuing.

Breakpoint 1, dbg_panic_halt () at util/debug.c:190
190	        __asm__ volatile("cli; hlt");
(gdb) where
#0  dbg_panic_halt () at util/debug.c:190
#1  0xc000862d in dbg_panic (file=0xc00556c1 "mm/pagetable.c", 
    line=253, 
    func=0xc00559d9 <__func__.1676> "_pt_fault_handler", 
    fmt=0xc005583c "\nPage faulted while accessing 0x%08x\n")
    at util/debug.c:207
#2  0xc000db80 in _pt_fault_handler (regs=0xcfe1db80)
    at mm/pagetable.c:253
#3  0xc0004235 in __intr_handler (regs=...)
    at main/interrupt.c:395
#4  0xc0002853 in __intr_handler14 ()
    at include/main/interrupt.h:106
#5  0x00000010 in ?? ()
#6  0x00000010 in ?? ()
#7  0x01000000 in ?? ()
#8  0x00000000 in ?? ()
(gdb) frame 2
#2  0xc000db80 in _pt_fault_handler (regs=0xcfe1db80)
    at mm/pagetable.c:253
253	                panic("\nPage faulted while accessing 0x%08x\n", vaddr);
(gdb) p/x regs->r_eip
$1 = 0xc001003f
(gdb) disas /m 0xc001003f
Dump of assembler code for function pframe_remove_from_pts:
625	{
   0xc0010006 <+0>:	push   %ebp
   0xc0010007 <+1>:	mov    %esp,%ebp
   0xc0010009 <+3>:	push   %ebx
   0xc001000a <+4>:	sub    $0x24,%esp

626	        vmarea_t *vma;
627	        list_iterate_begin(mmobj_bottom_vmas(pf->pf_obj), vma, vmarea_t, vma_olink) {
   0xc001000d <+7>:	mov    0x8(%ebp),%eax
   0xc0010010 <+10>:	mov    (%eax),%eax
   0xc0010012 <+12>:	mov    0x1c(%eax),%eax
   0xc0010015 <+15>:	test   %eax,%eax
   0xc0010017 <+17>:	jne    0xc0010020 <pframe_remove_from_pts+26>
   0xc0010019 <+19>:	mov    0x8(%ebp),%eax
   0xc001001c <+22>:	mov    (%eax),%eax
   0xc001001e <+24>:	jmp    0xc0010028 <pframe_remove_from_pts+34>
   0xc0010020 <+26>:	mov    0x8(%ebp),%eax
   0xc0010023 <+29>:	mov    (%eax),%eax
   0xc0010025 <+31>:	mov    0x14(%eax),%eax
   0xc0010028 <+34>:	mov    0x14(%eax),%eax
   0xc001002b <+37>:	mov    %eax,-0xc(%ebp)
   0xc001002e <+40>:	jmp    0xc00100c3 <pframe_remove_from_pts+189>
   0xc0010033 <+45>:	mov    -0xc(%ebp),%eax
   0xc0010036 <+48>:	sub    $0x24,%eax
   0xc0010039 <+51>:	mov    %eax,-0x10(%ebp)
   0xc001003c <+54>:	mov    -0xc(%ebp),%eax
---Type <return> to continue, or q <return> to quit---
   0xc001003f <+57>:	mov    (%eax),%eax
   0xc0010041 <+59>:	mov    %eax,-0x14(%ebp)
   0xc00100bd <+183>:	mov    -0x14(%ebp),%eax
   0xc00100c0 <+186>:	mov    %eax,-0xc(%ebp)
   0xc00100c3 <+189>:	mov    0x8(%ebp),%eax
   0xc00100c6 <+192>:	mov    (%eax),%eax
   0xc00100c8 <+194>:	mov    0x1c(%eax),%eax
   0xc00100cb <+197>:	test   %eax,%eax
   0xc00100cd <+199>:	jne    0xc00100d6 <pframe_remove_from_pts+208>
   0xc00100cf <+201>:	mov    0x8(%ebp),%eax
   0xc00100d2 <+204>:	mov    (%eax),%eax
   0xc00100d4 <+206>:	jmp    0xc00100de <pframe_remove_from_pts+216>
   0xc00100d6 <+208>:	mov    0x8(%ebp),%eax
   0xc00100d9 <+211>:	mov    (%eax),%eax
   0xc00100db <+213>:	mov    0x14(%eax),%eax
   0xc00100de <+216>:	add    $0x14,%eax
   0xc00100e1 <+219>:	cmp    -0xc(%ebp),%eax
   0xc00100e4 <+222>:	jne    0xc0010033 <pframe_remove_from_pts+45>

628	                /* Get the virtual address in the area corresponding to this pf */
629	                if ((pf->pf_pagenum >= vma->vma_off)
   0xc0010044 <+62>:	mov    0x8(%ebp),%eax
   0xc0010047 <+65>:	mov    0x4(%eax),%edx
   0xc001004a <+68>:	mov    -0x10(%ebp),%eax
   0xc001004d <+71>:	mov    0x8(%eax),%eax
   0xc0010050 <+74>:	cmp    %eax,%edx
   0xc0010052 <+76>:	jb     0xc00100bd <pframe_remove_from_pts+1---Type <return> to continue, or q <return> to quit---
83>

630	                    && (pf->pf_pagenum < vma->vma_off + (vma->vma_end - vma->vma_start))) {
   0xc0010054 <+78>:	mov    0x8(%ebp),%eax
   0xc0010057 <+81>:	mov    0x4(%eax),%edx
   0xc001005a <+84>:	mov    -0x10(%ebp),%eax
   0xc001005d <+87>:	mov    0x8(%eax),%ecx
   0xc0010060 <+90>:	mov    -0x10(%ebp),%eax
   0xc0010063 <+93>:	mov    0x4(%eax),%ebx
   0xc0010066 <+96>:	mov    -0x10(%ebp),%eax
   0xc0010069 <+99>:	mov    (%eax),%eax
   0xc001006b <+101>:	sub    %eax,%ebx
   0xc001006d <+103>:	mov    %ebx,%eax
   0xc001006f <+105>:	add    %ecx,%eax
   0xc0010071 <+107>:	cmp    %eax,%edx
   0xc0010073 <+109>:	jae    0xc00100bd <pframe_remove_from_pts+183>

631	                        uintptr_t vaddr = (uintptr_t) PN_TO_ADDR(vma->vma_start + pf->pf_pagenum - vma->vma_off);
   0xc0010075 <+111>:	mov    -0x10(%ebp),%eax
   0xc0010078 <+114>:	mov    (%eax),%edx
   0xc001007a <+116>:	mov    0x8(%ebp),%eax
   0xc001007d <+119>:	mov    0x4(%eax),%eax
   0xc0010080 <+122>:	add    %eax,%edx
   0xc0010082 <+124>:	mov    -0x10(%ebp),%eax
   0xc0010085 <+127>:	mov    0x8(%eax),%eax
   0xc0010088 <+130>:	sub    %eax,%edx
   0xc001008a <+132>:	mov    %edx,%eax
   0xc001008c <+134>:	shl    $0xc,%eax
---Type <return> to continue, or q <return> to quit---
   0xc001008f <+137>:	mov    %eax,-0x18(%ebp)

632	                        /* And unmap it from that area's proc */
633	                        if (NULL != vma->vma_vmmap->vmm_proc) {
   0xc0010092 <+140>:	mov    -0x10(%ebp),%eax
   0xc0010095 <+143>:	mov    0x14(%eax),%eax
   0xc0010098 <+146>:	mov    0x8(%eax),%eax
   0xc001009b <+149>:	test   %eax,%eax
   0xc001009d <+151>:	je     0xc00100bd <pframe_remove_from_pts+183>

634	                                pt_unmap(vma->vma_vmmap->vmm_proc->p_pagedir, vaddr);
   0xc001009f <+153>:	mov    -0x10(%ebp),%eax
   0xc00100a2 <+156>:	mov    0x14(%eax),%eax
   0xc00100a5 <+159>:	mov    0x8(%eax),%eax
   0xc00100a8 <+162>:	mov    0x12c(%eax),%eax
   0xc00100ae <+168>:	mov    -0x18(%ebp),%edx
   0xc00100b1 <+171>:	mov    %edx,0x4(%esp)
   0xc00100b5 <+175>:	mov    %eax,(%esp)
   0xc00100b8 <+178>:	call   0xc000d712 <pt_unmap>

635	                        }
636	                }
637	
638	        } list_iterate_end();
639	}
   0xc00100ea <+228>:	add    $0x24,%esp
   0xc00100ed <+231>:	pop    %ebx
---Type <return> to continue, or q <return> to quit---
   0xc00100ee <+232>:	pop    %